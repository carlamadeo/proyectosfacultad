// update Model management sysinfo_file from the pre-8.3 format to the current
void main()
{
    string sysinfo_file = path_compose(current_projdir(), current_system(), ".sub_sys_info");
    list sysinfo_lines = string_to_list(read_file(sysinfo_file), "\n\r");
    list token;
    string new_content, line, key;
    file F, annotF;

    new_content = list_get(sysinfo_lines, 0) + "\1" + "8.3\n";
    int i;
    for(i = 1; i < list_count(sysinfo_lines); ++ i) {
        line = list_get(sysinfo_lines, i);
        key = string_extract(line, 0, 5);
        if(key == "node\1" || key == "link\1" || key == "cntx\1")
            new_content += line + "\n";
        else {
            // reached a file ...
            token = string_to_list(line, "\1");
            F = find_by_query("file[name = '" + list_get(token, 1) + "' & type = " + editor_to_type(list_get(token, 0)) + "]");
            if(F.annot_file_id != 0)
                annotF = find_by_query("file[id = ${F.annot_file_id}]");
            else
                annotF = NULL;
            new_content += "file\1" + F.id + "\1" + F.guid + "\1" + list_get(token, 0) + "\1" + F.name;
            if(annotF != NULL)
                new_content += "\1" + annotF.name;
            else
                new_content += "\1";
            if(list_count(token) > 2) // class table
                new_content += "\1" + list_get(token, 2) + "\1" + list_get(token, 3);
            new_content += "\n";
        }
    }

    write_file(sysinfo_file, new_content);
}

string editor_to_type(string editor)
{
    if(editor == "uclassd")
         return  "UmlClassDiagram";
    if(editor == "ustated")
         return  "UmlStateDiagram";
    if(editor == "uclasst")
         return  "UmlClassTable";
    if(editor == "usequenced")
         return  "UmlSequenceDiagram";
    if(editor == "ucollaborationd")
         return  "UmlCollaborationDiagram";
    if(editor == "uactivityd")
         return  "UmlActivityDiagram";
    if(editor == "uusecased")
         return  "UmlUseCaseDiagram";
    if(editor == "ucomponentd")
         return  "UmlComponentDiagram";
    if(editor == "udeploymentd")
         return  "UmlDeploymentDiagram";
    if(editor == "ustereotyped")
         return  "UmlStereotypeDiagram";
    if(editor == "rqtbl")
         return  "REQTable";
    return NULL;
}
