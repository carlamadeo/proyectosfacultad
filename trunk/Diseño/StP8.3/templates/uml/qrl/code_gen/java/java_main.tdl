/************************************************** 
 * java_main.tdl
 * ----------------
 *
 * Entry point for Java codegeneration. The main 
 * procedure in this script is called by 
 * "acd_codegen.qrl".
 * 
 * Author:  Frank Lippert
 * Company: Aonix GmbH
 * Date:    20.10.2001
 *
 * Copyright 2001, Aonix, San Diego
 **************************************************/

// Includes
USES ../tdl/std;
USES java_std;
USES java_globals;

USES init/java_MPackage;
USES init/java_MClass;
USES init/java_MNormalClass;
USES init/java_MInterface;
USES init/java_MAttribute;
USES init/java_MOperation;

USES util/java_MAssociation;
USES util/java_string;
USES util/java_import;
USES util/java_MStatemachine;

USES code/java_Common;
USES code/java_Class;
USES code/java_Interface;
USES code/java_Exception;
USES code/java_Operation;
USES code/java_Statemachine;
USES code/java_Ant;
USES code/java_Make;



proc main()
  init();
  initGlobals();
  
  loop(Instances->MPackage)
    [MPackage].init();
  end loop
  
  loop(Instances->MClass Where (!hasLoop(MClass->MDataType)))
    [MClass].init();
  end loop
  
  if ([class_id_list] == "")
    loop(Instances->MClass->MNormalClass Where ! [MNormalClass:isExternal])
      [MNormalClass].createMetaElements();
    end loop
  else
    loop(Instances->MClass([class_id_list])->MNormalClass Where ! [MNormalClass:isExternal])
      [MNormalClass].createMetaElements();
    end loop
  end if
  //loop(Instances->MNormalClass Where ! [MNormalClass:isExternal])
  //  [MNormalClass].createMetaElements();
  //end loop
  
  if ([class_id_list] == "")
    loop(Instances->MClass Where (! hasLoop(MClass->MDataType) && ! hasLoop(MClass->EnclosingClass)))
      if (! [MClass:isExternal])
        [MClass].prep_generation();
      end if
    end loop
  else
    loop(Instances->MClass([class_id_list]) Where (! hasLoop(MClass->MDataType) && ! hasLoop(MClass->EnclosingClass)))
      if (! [MClass:isExternal])
        [MClass].prep_generation();
      end if
    end loop
  end if
  
  //loop(Instances->MClass Where (! hasLoop(MClass->MDataType) && ! hasLoop(MClass->EnclosingClass)))
  //  if (! [MClass:isExternal])
  //    [MClass].prep_generation();
  //  end if
  //end loop
  
  if ([CREATE_MAKEFILES])
    switch([MAKEFILE_TYPE])
      case "make" :
        create_makefile();
        break;
      case "ant" :
        create_antfile();
        break;
      case "all" :
        create_makefile();
        create_antfile();
        break;
      default :
        info = "Unknown makefile type!\n";
        break;
    end switch
  end if
end proc


// Prepares file name and opens output file.
// Only normal classes and interfaces are considered.
proc MClass.prep_generation()
  if (hasLoop(MClass->MNormalClass) || hasLoop(MClass->MInterface))
    local filename = [srcdir] "/" [MClass:dir_name] [MClass.name] [JAVA_EXTENSION];
    output([filename]);
    [currentClass] = [MClass.id];
    insert("package", [MClass.id]);
    out = [MClass].gen_preface();
  end if
end proc
