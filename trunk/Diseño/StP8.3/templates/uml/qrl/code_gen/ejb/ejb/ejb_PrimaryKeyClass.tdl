/*******************************************
 *
 * Generates code for the PrimaryKey class
 * of an EJB EntityBean.
 *
 * Author:  Frank Lippert
 * Company: Aonix GmbH
 * Date:    11/20/2000
 ******************************************/


template genPrimaryKeyClass(MClass) 
package [MClass:package_name];

import javax.ejb.*;

public class [MClass.name]PK implements java.io.Serializable {

    /*****************************************
     * Attributes
     ****************************************/

    // Attributes marked as primary key fields.
    [loop(Instances->MAttribute([MClass:pk_attributes]))]
    public [MAttribute.type] [MAttribute.name];
    [end loop]


    /*****************************************
     * Constructors
     ****************************************/

    public [MClass.name]PK() {} // this no-arg constructor is required!
    public [MClass.name]PK([MClass:pk_attr_with_type_list]) {
        [loop(Instances->MAttribute([MClass:pk_attributes]))]
        this.[MAttribute.name] = [MAttribute.name];
        [end loop]
    }


    /*****************************************
     * Operations
     ****************************************/
      
    /**
     * Compares two Operations for equality
     *
     * @param o The object this instance is compared to.
     * @return Returns true if both PrimaryKeys are equal.
     */
    public boolean equals(Object o) {
       if (o instanceof [MClass.name]PK)
           return ([loop(Instances->MAttribute([MClass:pk_attributes]); setDelim(""); setDelim(" &&\n                   "))][switch ([MAttribute.type])]
            [case "byte" :]
            [case "short" :]
            [case "int" :]
            [case "long" :]
            [case "float" :]
            [case "double" :]
            [case "char" :]
            [case "boolean" :][delim()] (([MClass.name]PK) o).[MAttribute.name] == [MAttribute.name][break]
            [default :][delim()] [MAttribute.name].equals((([MClass.name]PK) o).[MAttribute.name])[break][end switch][end loop]);
       return false;
    }
     
    /**
     * According to the EJB Spec 1.1, this function
     * is needed, if @link{equals} is also defined.
     */
    public int hashCode() {
        // Computes a hashcode of the concatenation of all key attributes,
        // stores it in the variable "hash".
        StringBuffer strBuf = new StringBuffer();
        [loop(Instances->MAttribute([MClass:pk_attributes]))]
        strBuf.append([MAttribute.name]);
        [end loop]
        return strBuf.toString().hashCode(); 
    }
}
end template