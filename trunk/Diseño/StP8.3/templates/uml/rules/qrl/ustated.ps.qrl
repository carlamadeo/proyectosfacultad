
//      StP/UML
//      Confidential property of Aonix
//      Copyright (c) 1997
//      All rights reserved

#include "rules/qrl/ps.inc"

// Initialize new property sheet.  Can be called be double click rule, qrl for 
// menu entry, etc.

void
UmlState_ps_show()

{
    gde_builtin("PropertySheetShow UmlState_ps");

    // reset

    UmlState_ps_init();
}


// double click hook
void
UmlState_ps_double_click(gde_mapsymbol ms)
{
    ps_reset_last_fill();
    UmlState_ps_show();
}



boolean UmlState_ps_initted = False;

void
UmlState_ps_init()

{
    if (UmlState_ps_initted)
    {
        // just refresh the prop sheet
        ps_fill("UmlState_ps");
        return;
    }
    UmlState_ps_initted = True;
//    gde_builtin("EditorActionDone 0214951139  UmlState_ps_ActionDone();"); // ECR 6880
    ps_init("UmlState_ps", "ObjectName", ps_Node, string_to_list("InitialState FinalState StateMachine State SplitControl MergeControl CompositeState ConcurrentSubregion History DeepHistory", " "), ps_Node);

    // ECR 3789 begin
    ps_append_field("UmlState_ps", "ObjectDescription",
    "GenericObject", "", ps_NoteDescriptionExternal, NULL);
    // ECR 3789 end
    ps_append_field("UmlState_ps", "Stereotype", "UmlExtensibilityDefinition", "UmlStereotype", ps_StringAnt, NULL);
    ps_append_field("UmlState_ps", "Constraints", "UmlExtensibilityDefinition", "UmlConstraintItem", ps_StringList, NULL);
    ps_append_field("UmlState_ps", "TaggedValues", "UmlExtensibilityDefinition", "UmlTaggedValue", ps_StringList, NULL);

    ps_fill("UmlState_ps");

    //ps_dump();

    return;
}


// change focus of property sheet

void
UmlState_ps_ActionDone()

{
    // reset propsheet

    if( ui_owner_visible(to_ui_prop("UmlState_ps","OK")) ) // ECR 4037
        ps_fill("UmlState_ps");
}

////////////////////////////////////////////////////////////////////////////////
// UmlStateLink_ps ...
////////////////////////////////////////////////////////////////////////////////

void
UmlStateLink_ps_show()

{
    gde_builtin("PropertySheetShow UmlStateLink_ps");

    // reset

    UmlStateLink_ps_init();
}


// double click hook
void
UmlStateLink_ps_double_click(gde_mapsymbol ms)
{
    ps_reset_last_fill();
    UmlStateLink_ps_show();
}



boolean UmlStateLink_ps_initted = False;

void
UmlStateLink_ps_init()

{
    if (UmlStateLink_ps_initted)
    {
        // just refresh the prop sheet
        ps_fill("UmlStateLink_ps");
        return;
    }
    // ECR 3786
    ui_text_set_readonly(to_ui_prop("UmlStateLink_ps", "ObjectName"), True);
    // ECR 3786 End
    UmlStateLink_ps_initted = True;
//    gde_builtin("EditorActionDone 0214951139  UmlStateLink_ps_ActionDone();"); // ECR 6880
    ps_init("UmlStateLink_ps", "ObjectName", ps_Link, string_to_list("StateTransitionLink SplitControlLink MergeControlLink", " "), ps_Link);

    // ECR 3789 begin
    ps_append_field("UmlStateLink_ps", "ObjectDescription",
    "GenericObject", "", ps_NoteDescriptionExternal, NULL);
    // ECR 3789 end
    ps_append_field("UmlStateLink_ps", "Stereotype", "UmlExtensibilityDefinition", "UmlStereotype", ps_StringAnt, NULL);
    ps_append_field("UmlStateLink_ps", "Constraints", "UmlExtensibilityDefinition", "UmlConstraintItem", ps_StringList, NULL);
    ps_append_field("UmlStateLink_ps", "TaggedValues", "UmlExtensibilityDefinition", "UmlTaggedValue", ps_StringList, NULL);

    // ECR 3786
    // ps_append_field("UmlStateLink_ps", "ObjectName", "", "", ps_ActState, NULL);

    ps_append_field("UmlStateLink_ps", "TransitionName", "", "", ps_ActState, NULL);
    ps_append_field("UmlStateLink_ps", "TransitionEvent", "", "", ps_ActState, NULL);
    // Begin add ECR 5050
    ps_append_field("UmlStateLink_ps", "ChooseInEvent", "", "", ps_ChooseInEvent, NULL);
    // End add ECR 5050
    ps_append_field("UmlStateLink_ps", "TransitionGuard", "", "", ps_ActState, NULL);
    // Begin add ECR 5050
    ps_append_field("UmlStateLink_ps", "ChooseGuard", "", "", ps_ChooseGuard, NULL);
    // End add ECR 5050
    ps_append_field("UmlStateLink_ps", "TransitionAction", "", "", ps_ActState, NULL);
    // Begin add ECR 5050
    ps_append_field("UmlStateLink_ps", "ChooseAction", "", "", ps_ChooseAction, NULL);
    // End add ECR 5050
    ps_append_field("UmlStateLink_ps", "TransitionSend", "", "", ps_ActState, NULL);
    // ECR 3786 End
    // Begin add ECR 5050
    ps_append_field("UmlStateLink_ps", "ChooseOutEvent", "", "", ps_ChooseOutEvent, NULL);
    // End add ECR 5050
    ps_fill("UmlStateLink_ps");

    //ps_dump();

    return;
}


// change focus of property sheet

void
UmlStateLink_ps_ActionDone()

{
    // reset propsheet

    if( ui_owner_visible(to_ui_prop("UmlStateLink_ps","OK")) ) // ECR 4037
        ps_fill("UmlStateLink_ps");
}

// Active Function

int
UmlStateObjectPropsActive()
{
    list symbols;

    symbols = gde_selected_symbols();
    if (list_count(symbols) != 1)
        return ACTIVE_FUNC_IS_INACTIVE;

    if (list_count(gde_symbols_find_with_types(symbols, string_to_list("InitialState FinalState StateMachine SplitControl MergeControl State CompositeState ConcurrentSubregion History DeepHistory StateTransitionLink SplitControlLink MergeControlLink", " "))) ==
 1)
        return ACTIVE_FUNC_IS_ACTIVE;

    return ACTIVE_FUNC_IS_INACTIVE;
}

