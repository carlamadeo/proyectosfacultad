
//      StP/UML
//      Confidential property of Aonix
//      Copyright (c) 1997
//      All rights reserved

NodeSymbol Actor
{
    { Navigation
	{ Name ScenarioInvolvingActor }
	{ Label "Use Case Scenario Involving Actor" }
	{ Query "node_ref[file[UmlSequenceDiagram || UmlCollaborationDiagram] && node[UmlActor && name = '${node.name}']]"  }
 	//{ FailureCmd FindScenarioInvolvingActor }
    }
    { Navigation
	{ Name UseCaseInvolvingActor }
	{ Label "Use Case Diagram Involving Actor" }
	{ Query "node_ref[file[UmlUseCaseDiagram] && node[UmlActor && name = '${node.name}']]"  }
 	//{ FailureCmd FindUseCaseInvolvingActor }
    }
}

Command FindUseCaseInvolvingActor
{
    //{ PrintName "Find another Use Case diagram involving Actor" }
    { PrintName "There are no other Use Case diagrams involving Actor" }
    //{ Builtin "EditorQrlEvalNoSave uml_print_message(\"Actor\");" }
    //{ StartMessage "Find/Create Use Case ..." }
    { SuccessMessage "Use Case target not found." }
    //{ FailureMessage "Use Case target not found." }
}


Command FindScenarioInvolvingActor
{
    //{ PrintName "Find scenario involving Actor" }
    { PrintName "There are no scenarios involving Actor" }
    //{ Builtin "EditorQrlEvalNoSave uml_print_message(\"Actor\");" }
    //{ StartMessage "Find/Create Use Case ..." }
    { SuccessMessage "Use Case target not found (no such scenario)." }
    //{ FailureMessage "Use Case target not found (no such scenario)." }
}


NodeSymbol UseCase
{
    { Navigation
	{ Name CreateOrFindScenario_in_SeqDiag }
	{ Label "Scenario in Sequence Diagram" }
	{ FailureCmd FindOrCreateScenario_in_SeqDiag }
    }
    { Navigation
    { ParseCondition "!is_validator_available(\"standalone\");" }
	{ Name CreateOrFindScenario_in_CollDiag }
        { Label "Scenario in Collaboration Diagram" }
 	{ FailureCmd FindOrCreateScenario_in_CollDiag }
    }
    { Navigation
    { ParseCondition "!is_validator_available(\"standalone\");" }
	{ Name CreateOrFindScenario_in_ActivityDiag }
        { Label "Scenario in Activity Diagram" }
	//{ TargetFunc "FindActivityDiagramWithCorrespondingScenario(0${node.id});" }
 	{ FailureCmd FindOrCreateScenario_in_ActivityDiag }
    }
}

Command FindOrCreateScenario_in_SeqDiag
{
    { PrintName "Find or Create Scenario in Sequence Diagram" }
    { Builtin "EditorQrlEvalNoSave FindOrCreateScenarioSequenceDg(0${node.id});" }
    { StartMessage "Find/Create Scenario for Use Case ..." }
    { SuccessMessage "Find/Create Scenario for Use Case completed." }
    { FailureMessage "Find/Create Scenario for Use Case failed." }
    { ObjectRequired True }
}

Command FindOrCreateScenario_in_CollDiag
{
    { PrintName "Find or Create Scenario in Collaboration Diagram" }
    { Builtin "EditorQrlEvalNoSave FindOrCreateScenarioCollaborationDg(0${node.id});" }
    { StartMessage "Find/Create Scenario for Use Case ..." }
    { SuccessMessage "Find/Create Scenario for Use Case completed." }
    { FailureMessage "Find/Create Scenario for Use Case failed." }
    { ObjectRequired True }
}

Command FindOrCreateScenario_in_ActivityDiag
{
    { PrintName "Create Scenario in Activity Diagram" }
    { Builtin "EditorQrlEvalNoSave FindOrCreateScenarioActivityDg(0${node.id});" }
    { StartMessage "Find/Create Scenario for Use Case ..." }
    { SuccessMessage "Find/Create Scenario for Use Case completed." }
    { FailureMessage "Find/Create Scenario for Use Case failed." }
    { ObjectRequired True }
}

LinkSymbol Communicates
{
    { Navigation
	{ Name ScenarioInvolvingExternalEvent }
	{ Label "Use Case Scenario Involving External Event" }
	{ TargetFunc "FindScenarioInvolvingExternalEvent(0${link.id});" }
 	//{ FailureCmd FindScenarioInvolvingExternalEvent }
    }
}

Command FindScenarioInvolvingExternalEvent
{
    { PrintName "There are no scenarios involving external event" }
    //{ PrintName "Find scenario involving external event" }
    //{ Builtin "EditorQrlEvalNoSave FindScenarioInvolvingExternalEvent(${link.id});" }
    //{ StartMessage "Find/Create Use Case ..." }
    { SuccessMessage "Scenario target not found." }
    { FailureMessage "Scenario not found." }
}


