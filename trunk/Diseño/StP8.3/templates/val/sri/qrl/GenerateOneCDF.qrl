external string use_case_name;

#include "qrl/tsdl_extract.inc"
#include "qrl/basic_textract_dt.inc"
#include "qrl/include/error.inc"

#include "val/qrl/include/TConfig.inc"
#include "val/qrl/include/TUseCase.inc"
#include "val/qrl/include/CreateDir.inc"

  list ScenarioList;
  list testcaselist;


  string OUTPUTPATH = current_projdir() + current_system() + "/testscpt_files/sri/";


  string OUTPUTDIR;
  string FILETEXT;
  const string SEPARATOR = "###";
  const string SEPARATOR2 = "@@@";

void 
main ()
{
  message ("Generating CDF Files");


  string test_unit_id;




  test_unit_id = Get_T_test_unit_id(use_case_name, "");

  ScenarioList = GetScenarioList(use_case_name);


  OUTPUTDIR = OUTPUTPATH + test_unit_id;


  PrintScenarios();

}

void
PrintScenarios()
{
  int i,count;
  node scenario;

  count = list_count(ScenarioList);

  for (i=0;i<count;i++)
    {
      scenario = list_get(ScenarioList, i);

      message ("  " + scenario.name);

      PrintCDF(scenario.name);
    }


}


void
PrintCDF(string name)
{

  string fname = OUTPUTDIR + "/" + name + "/" + name + ".cdf.template";

  MakeDir(OUTPUTDIR + "/" + name );


  FILETEXT = "\n";


  FILETEXT = FILETEXT + "/*  Case Description File: " + name + "  */\n";

  FILETEXT = FILETEXT + "BEGIN { }\n";

  FILETEXT = FILETEXT + "CASE  {\n";

  FILETEXT = FILETEXT + "if (ACTION_NAME == \"" + name + "\" )\n";
  FILETEXT = FILETEXT + "  {\n";
  FILETEXT = FILETEXT + "    open     case \"TC_\" CASE_NAME \".ksv\";\n";
  FILETEXT = FILETEXT + "    print    \"/* Test Case \" CASE_NAME \" */\";\n";
  FILETEXT = FILETEXT + "    print    \"/*  */\";\n";
  FILETEXT = FILETEXT + "    print    \"/* Input Data Items  */\";\n";
  FILETEXT = FILETEXT + "    print    \"/*  */\";\n";
  FILETEXT = FILETEXT + "    foreach  USES_INDEX\n";
  FILETEXT = FILETEXT + "     {\n";
  FILETEXT = FILETEXT + "       print \"/*    \" USES_NAME \" = \" USES_VALUE \" */\";\n";
  FILETEXT = FILETEXT + "     }\n";
  FILETEXT = FILETEXT + "    print    \"/*  */\";\n";
  FILETEXT = FILETEXT + "    print    \"/*  */\";\n";
  FILETEXT = FILETEXT + "    print    \"/* Output Data Items  */\";\n";
  FILETEXT = FILETEXT + "    print    \"/*  */\";\n";


  FILETEXT = FILETEXT + "    foreach  PRODUCES_INDEX\n";
  FILETEXT = FILETEXT + "     {\n";
  FILETEXT = FILETEXT + "       print \"/*    \" PRODUCES_NAME \" = \" PRODUCES_VALUE \" */\";\n";
  FILETEXT = FILETEXT + "     }\n";



  FILETEXT = FILETEXT + "         /************************************/\n";
  FILETEXT = FILETEXT + "         /************************************/\n";
  FILETEXT = FILETEXT + "         /* Add test script information here */\n";
  FILETEXT = FILETEXT + "         /************************************/\n";
  FILETEXT = FILETEXT + "         /************************************/\n";

  FILETEXT = FILETEXT + "\n";
  FILETEXT = FILETEXT + "\n";
  FILETEXT = FILETEXT + "\n";
  FILETEXT = FILETEXT + "\n";
  FILETEXT = FILETEXT + "\n";
  FILETEXT = FILETEXT + "\n";


  FILETEXT = FILETEXT + "         /************************************/\n";
  FILETEXT = FILETEXT + "         /************************************/\n";
  FILETEXT = FILETEXT + "         /* End test script information here */\n";
  FILETEXT = FILETEXT + "         /************************************/\n";
  FILETEXT = FILETEXT + "         /************************************/\n";

  FILETEXT = FILETEXT + "   }\n";

  FILETEXT = FILETEXT + " close    case;\n";

  FILETEXT = FILETEXT + "}\n";

  FILETEXT = FILETEXT + "END      close report;\n";


  MakeBackup (fname);

  write_file (fname, FILETEXT);


}
