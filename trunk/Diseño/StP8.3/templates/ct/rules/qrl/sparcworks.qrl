//////////////////////////////////////////////////////////////////////////////
//
// 	sccsid[] = %W% %Y% %D%
// 	StP/Core
// 	Confidential property of Interactive Development Environments, Inc.
// 	Copyright (c) 1992-1994
// 	All rights reserved
//
// 	StP ci rules file for SPARCworks integration
//
//////////////////////////////////////////////////////////////////////////////

#include "rules/qrl/ci.qrl"

// ToolTalk Addresses

const int TT_PROCEDURE	= 0;
const int TT_OBJECT	= 1;
const int TT_HANDLER	= 2;
const int TT_OTYPE	= 3;

void
main()
{
    callback_create("connect-to-session", "tt_connect");
    callback_create("hide", "stp_hide");
    callback_create("expose", "stp_show");
    callback_create("PEI_OPEN", "stp_deiconify");
    callback_create("PEI_CLOSE", "stp_iconify");
    callback_create("quit", "tt_quit");
    callback_create("PEI_STARTED", "tt_check");

    pattern_register("TT_HANDLE", "hide", "TT_SESSION");
    pattern_register("TT_HANDLE", "expose", "TT_SESSION");
    pattern_register("TT_HANDLE", "PEI_OPEN", "TT_SESSION");
    pattern_register("TT_HANDLE", "PEI_CLOSE", "TT_SESSION");
    pattern_register("TT_HANDLE", "quit", "TT_SESSION");

    main_event_loop();
}

string managerProcId;

void
tt_connect(message msg)
{
    string key;

    msg.type = "ToolTalk";
    msg.class = "TT_REQUEST";
    msg.scope = "TT_SESSION";
    msg.handle = TT_HANDLER;
    key = list_get(msg.arglist, 1);
    managerProcId = list_get(msg.arglist, 2);
    msg.handler = managerProcId;
    msg.arglist = string_to_list("PEI_STARTED " + key + " null", " ");
    msg.vtypelist = string_to_list("operation key sw_session", " ");
    msg.modelist = string_to_list("TT_IN TT_IN TT_OUT", " ");
    message_send(msg);
}

void
tt_check(message msg)
{
    if(message_status(msg))
    {
	message(message_error_text(msg));
    }
}

void
tt_quit(message msg)
{
    msg.type = "ToolTalk";
    msg.class = "TT_NOTICE";
    msg.scope = "TT_SESSION";
    msg.handle = TT_PROCEDURE;
    msg.arglist = string_to_list("departed null", " ");
    msg.modelist = string_to_list("TT_IN TT_IN", " ");
    msg.vtypelist = string_to_list("operation sw_session", " ");
    message_send(msg);

    stp_quit();
    self_quit();
}

