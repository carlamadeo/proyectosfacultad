// call this with a command-line like
// qrp tabgen.test -o <print file> -x tabname <tname> -x tabtype <ttype>
// [-t <target> -f report.mif]


#include "qrl/ted/tabgen.inc"

external boolean preview = False;
external string tabname = "";
external string tabtype = "SDD";

void main()
{
    int ix, num_cells;

    define_table_format(tabtype, tabname);
    define_table_caption(tabtype, "This is the caption");

    // set up the cells in the table
    define_table_cell(tabtype, 200);
    define_table_cell(tabtype, 100);
    define_table_cell(tabtype, 50);
    define_table_cell(tabtype, 100);
    define_table_cell(tabtype, 200);
    define_table_cell(tabtype, 75);

    // set up header cells (some may span)
    define_table_header_span(tabtype, 3, BOLD, Left, "HEAD 1");
    define_table_header_span(tabtype, 2, STANDARD, Right, "HEAD 2");
    define_table_header_span(tabtype, 1, BOLD, Center, "HEAD 3");

    // set up invariant parts of body cells
    num_cells = define_table_body_cells(tabtype, STANDARD, Center);

    // set any special borders
    define_table_border(tabtype, BODY, 0, TOP, NULL, Solid, Double, Visible);
    define_table_border(tabtype, BODY, 1, RIGHT, Thick, Solid, NULL, Visible);

    // generate the fill file
    generate_table_header(tabtype);
    generate_table_body_start(tabtype);
    for (ix = 1; ix <= 3*num_cells; ix = ix + 1)
    {
        generate_body_cell(tabtype, "BODY " + ix);
    	if (ix == num_cells)
    	    undefine_table_border(tabtype, BODY, 0, BOTTOM);
    }
    generate_table_body_end(tabtype);
    generate_table_finish(tabtype);

    if (preview)
	preview_table(tabtype);
    else
	output_table(tabtype);    
}

