//
// 	sccsid[] = %W% %Y% %D%
// 	StP/Core
// 	Confidential property of Interactive Development Environments, Inc.
// 	Copyright (c) 1992-1994
// 	All rights reserved
//

//
//	FILE:	OMTOperation.note
//

Note 801705
{
	{ AppType OperationExtendedDefinition }
        { HelpText "The Operation Definition note lets you add items that capture modeling information about a particular operation beyond what can be specified in the class table.  Code generation from the items in this note is not yet available." }
	{ PrintName "Operation Definition" }
	{ Bounds { Min 1 } { Max 1 } }
	{ Item
		{ AppType OperationQualification }
                { HelpText "The Qualification item lets you specify language-specific qualifiers." }
		{ PrintName "Qualification" }
		{ Bounds { Min 0 } { Max 1 } }
		{ InitValue "" }
	}
	{ Item
		{ AppType OperationProtocol }
                { HelpText "The Protocol item lets you specify the name of a logical (non-semantic) grouping for the operation (e.g., Smalltalk)." }
		{ PrintName "Protocol" }
		{ Bounds { Min 0 } { Max 1 } }
		{ InitValue "" }
	}
	{ Item
		{ AppType OperationPreconditions }
                { HelpText "The Preconditions item lets you specify preconditions for the operation.  These may be stated in any number of forms, including text (informal or formal expressions), references to source code or assertion statements, or references to object diagrams that are in this context." }
		{ PrintName "Preconditions" }
		{ Bounds { Min 0 } { Max 1 } }
		{ InitValue "" }
	}
	{ Item
		{ AppType OperationSemantics }
                { HelpText "The Semantics item lets you specify semantics for the operation.  These may be stated in any number of forms, including text (informal or formal expressions), references to source code or assertion statements, or references to object diagrams that are in this context." }
		{ PrintName "Semantics" }
		{ Bounds { Min 0 } { Max 1 } }
		{ InitValue "" }
	}
	{ Item
		{ AppType OperationPostconditions }
                { HelpText "The Postconditions item lets you specify postconditions for the operation.  These may be stated in any number of forms, including text (informal or formal expressions), references to source code or assertion statements, or references to object diagrams that are in this context." }
		{ PrintName "Postconditions" }
		{ Bounds { Min 0 } { Max 1 } }
		{ InitValue "" }
	}
	{ Item
		{ AppType OperationExceptions }
                { HelpText "The Exceptions item lets you specify exceptions that can be raised by the operation.  Each element should be the name of a class naming the exception." }
		{ PrintName "Exceptions" }
		{ Bounds { Min 0 } { Max 1 } }
		{ InitValue "" }
	}
	{ Item
		{ AppType OperationConcurrency }
                { HelpText "The Concurrency item lets you specify the concurrency semantics in the presence of multiple threads of control of the operation." }
		{ PrintName "Concurrency" }
		{ Bounds { Min 0 } { Max 1 } }
		{ InitValue "Sequential" }
	}
	{ Item
		{ AppType OperationSpaceComplexity }
                { HelpText "The Space Complexity item lets you express a statement about the relative or absolute storage required by the operation." }
		{ PrintName "Space Complexity" }
		{ Bounds { Min 0 } { Max 1 } }
		{ InitValue "" }
	}
	{ Item
		{ AppType OperationTimeComplexity }
                { HelpText "The Time Complexity item lets you express a statement about the relative or absolute time required to complete the operation." }
		{ PrintName "Time Complexity" }
		{ Bounds { Min 0 } { Max 1 } }
		{ InitValue "" }
	}
	{ Item
		{ AppType Stereotype }
                { HelpText "The Stereotype item lets you specify a stereotype name for the operation." }
		{ PrintName "Stereotype" }
		{ Bounds { Min 0 } { Max 1 } }
		{ InitValue "" }
	}
}

Note 801535
{
	{ AppType OMTOperationCXXCode }
        { HelpText "The C++ Source Code note description lets you add C++ source code for the body of the operation." }
	{ PrintName "C++ Source Code" }
	{ Bounds { Min 0 } { Max 1 } }
}

Note 801803
{
	{ AppType OMTOperationAda83Code }
        { HelpText "The description of the Ada_83 Source Code note is where source code for the body of the operation can be entered." }
	{ PrintName "Ada_83 Source Code" }
	{ Bounds { Min 0 } { Max 1 } }
}

Note 801813
{
	{ AppType OMTOperationAda95Code }
        { HelpText "The description of the Ada_95 Source Code note is where source code for the body of the operation can be entered." }
	{ PrintName "Ada_95 Source Code" }
	{ Bounds { Min 0 } { Max 1 } }
}

Note 801539
{
	{ AppType OMTOperationSmalltalkCode }
        { HelpText "The Smalltalk Source Code note description lets you add Smalltalk source code for the body of the operation." }
	{ PrintName "Smalltalk Source Code" }
	{ Bounds { Min 0 } { Max 1 } }
}
Note 801819
{
	{ AppType OMTOperationTOOLCode }
        { HelpText "The TOOL Source Code note description lets you add TOOL source code for the body of the method." }
	{ PrintName "TOOL Source Code" }
	{ Bounds { Min 0 } { Max 1 } }
	{ Item
		{ AppType OMTTOOLOperationCodeGenerate }
                { HelpText "The Generate Method Body item determines whether the method's body is generated upon TOOL class code generation."}
		{ PrintName "Generate Method Body" }
		{ Bounds { Min 0 } { Max 1 } }
		{ InitValue "False" }
	}
}

Note 801825
{
	{ AppType OMTOperationJavaCode }
        { HelpText "The Java Source Code note description lets you add Java source code for the body of the operation." }
	{ PrintName "Java Source Code" }
	{ Bounds { Min 0 } { Max 1 } }
}
