//
//      sccsid[] = %W% %Y% %D%
//      StP/Core
//      Confidential property of Interactive Development Environments, Inc.
//      Copyright (c) 1992-1993
//      All rights reserved
//

//////////////////////////////////////////////////////////////////////
//
//      2167A Interface Requirements Specification
//
//
//      See script_help for general template comments.
//
//////////////////////////////////////////////////////////////////////

#include "qrl/2167A/IRS_externals.inc"
#include "qrl/2167A/2167A_generic_fns.inc"
#include "qrl/2167A/IRS_table_fns.inc"
#include "qrl/2167A/interfaces.inc"
#include "qrl/2167A/2167A_formats.inc"

script_help = "This report satisfies DI-MCCR-80026A, the Interface 
Requirements Specification (IRS).

3.1  The Interface Requirements Specification (IRS) specifies the
requirements for one or more interfaces between a particular Computer
Software Configuration Item (CSCI) and other configuration items or
critical items.

3.2  The IRS specifies the requirements of the interface(s) and enables
the Government to assess whether the implementation of the
interface complies with those requirements.  Upon Government approval and
authentication, the IRS becomes the joint configuration control
device for the interface(s) and becomes part of the Allocated Baseline.

3.3  The IRS is used by the contractor(s) as the basis for development
of the interface(s).

7.3  Detailed design information for the interface(s) defined by the IRS
is provided in the Interface Design Document (IDD), DI-MCCR-80027A.

7.4  This DID supersedes DI-MCCR-80026 dated 4 June 1985.

The Software through Pictures implementation of the IRS consists of
a Query and Reporting Language (QRL) script that integrates various
graphical diagrams, user-input files, and literal text into a complete
document, embedding in the resulting output file the document preparation
commands for the targetted text formatting system.

This template has implemented two appendices.  Appendix A contains all
figures referenced throughout the document, and Appendix B contains
all the tables.  References are made throughout the template to these
appendices.  If you want to include the diagrams in the text of the
document, the template must be modified accordingly.

This implementation of the SRS and IRS consists of one
IRS with all the interfaces not documented in the SRS; that is, you can
specify whether to put the interface documentation in THE IRS or THE SRS,
but not AN IRS.  This simplifies automatic production of the documents
greatly.  However, if you want separate IRSs for certain interfaces, you
can adapt the IRS document template for each specific interface by copying
it and adding the interface specification to the interface selections in
the template.";


boolean ddt_initialized = False;


void
main()
{
    message("IRS:  START");
    if (legal_target())
    {
        e_GENERATION_INFO = False;
    	initialize ();

    	title_page ();
    	scope_section ();
    	applicable_documents_section ();
    	interface_specification_section ();
    	Section4 ();
    	Section5 ();
    	notes_section ();
    	appendices_section ();

    	clean_up ();
    }
    display_fault_status ();
    message("IRS:  END");
}

void
initialize ()
{
    message ("IRS:  Initialize");

    // set default format
    format(DefaultFormatFile);

    // Diagram printing initialization
    diagram_orientation_scale_set (PortraitFit);
    diagram_caption_alignment_set (Center);
    diagram_caption_orientation_set (Portrait);
    diagram_caption_placement_set (Bottom);
    diagram_caption_paragraph_format_set (FigureFormat);
    diagram_frame_height_set (5.0);
    diagram_frame_width_set (6.0);
    table_caption_alignment_set (Center);
    table_caption_placement_set (Bottom);
    table_caption_paragraph_format_set (TableTitleFormat);
    table_width_set (6.5);
    table_cell_bold_paragraph_format_set (TableHeaderCellFormat);
    table_cell_paragraph_format_set (TableBodyCellFormat);

    message ("        external interface list");
    create_external_interfaces("external_interfaces", select_IRS_components, "IRS");
}


// CLEAN_UP
//
// This function deallocates any memory that might have been allocated
// during the execution of this program.

void
clean_up ()
{
    //print_global_lists ();
    id_list_free ("external_interfaces");
}




// TITLE_PAGE
//
//
// 10.1.1  Title page.  The title page shall contain the information identified
// below in the indicated format:
//
//
void
title_page ()
{
    message("IRS:  Title Page");
    paragraph (TitleDocInfoFormat);
    print_line (document_number);
    print (document_date());
    
    paragraph (TitleMainFormat);
    print_line("INTERFACE REQUIREMENTS SPECIFICATION");
    print_line("FOR THE");
    print(system_name);

    paragraph (TitlePrepInfoFormat);
    print_line ("CONTRACT NO. " + contract_number);
    print_line ("CDRL SEQUENCE NO. " +  cdrl_number);
    print_line ("Prepared for: ");
    print_line (contracting_agency_and_dept_code);
    print_line ("Prepared By: ");
    print_line (contractor_name_and_address);

    paragraph (TitleSignaturesFormat);
    print ("Authenticated by _______________________");
    tab(1);
    print_line ("(Contracting agency)");
    print ("Date ____________________");

    paragraph (TitleSignaturesFormat);       
    print ("Approved by ____________________________");
    tab(1);
    print_line ("(Contractor agency)");
    print ("Date ____________________");

    // No page needed here as the paragraph style "heading L1" is placed
    // at the top of the page.
    
    // BUG: Currently, this does not happen in Core 1.0.
    // Steve Schmidt will try to sneak this in after Core 1.1 Beta.

}



// Sets up the IRS Scope section

// 10.1.3  Scope

// This section shall be numbered 1.  and divided into the following
// paragraphs.
//
// 10.1.3.1  Identification.  This paragraph shall be numbered 1.1 and shall
// contain the approved identification number, title of the interface(s)
// to which this IRS applies.

void
scope_section ()
{
    string  sys_abbrev      = " ";
    string  csci_abbrev = " ";

    message ("IRS:  1. Scope ...");
    paragraph (HeadingL1Format);
    print ("Scope.");
    
    message ("IRS:    1.1. Identification ...");
    paragraph (HeadingL2Format);
    print ("Identification");
    paragraph (SubSectionBodyFormat);

    // Add the necessary delimiters around the abbreviations if in fact
    // they exist.
    if (system_abbreviation != "")
	sys_abbrev = " (" + system_abbreviation + ") ";
    else
	display_warning ("No system abbreviation provided");

    if (csci_abbreviation != "")                                 
	csci_abbrev = " (" + csci_abbreviation + ") ";
    else
	display_warning ("No CSCI abbreviation provided");

    print("This Interface Requirements Specification establishes the requirements for the interface(s) identified as ");

    print_interface_name_list("InterfaceRequirement");

    print(" for the CSCI identified as " + csci_name +
        csci_abbrev + csci_number + " CSCI_Number of the " + system_name +
        sys_abbrev + system_number + " System.");


    message ("IRS:    1.2. System overview ...");
    paragraph (HeadingL2Format);
    print ("System overview.");
    paragraph (SubSectionBodyFormat);
    print (SECTION_1_2_System_overview);

    message ("IRS:    1.3. Document overview ...");
    paragraph (HeadingL2Format);
    print ("Document overview.");
    paragraph (SubSectionBodyFormat);
    print (SECTION_1_3_Document_overview);
}



// Sets up the Applicable Documents section of the IRS

// 10.1.4  Applicable Documents

// This section shall be numbered 2.  and divided into the following
// paragraphs.

void
applicable_documents_section ()
{
    message ("IRS:  2. Applicable documents ...");
    paragraph (HeadingL1Format);
    print ("Applicable Documents.");

    
    message ("IRS:    2.1. Government documents ...");
    paragraph (HeadingL2Format);
    print ("Government documents.");

    paragraph (SubSectionBodyFormat);
    print ("The following documents of the exact issue shown form a part " +
	"of this specification to the extent specified herein.  In the " +
	"event of conflict between the documents referenced herein and " +
	"the content of this specification, the contents of this " +
	"specification shall be considered a superseding requirement.");

    paragraph();
    print (SECTION_2_1_Government_documents);

    paragraph();
    print ("Copies of the specifications, standards, drawings, and " +
	"publications required by suppliers in connection with specific " +
	"procurement functions should be obtained from the contracting " +
	"agency or as directed by the contracting officer.");


    message ("IRS:    2.2. Non-Government documents ...");
    paragraph (HeadingL2Format);
    print ("Non-Government Documents.");

    paragraph(SubSectionBodyFormat);
    print ("The following documents of the exact issue shown form a part " +
	"of this specification to the extent specified herein.  In the " +
	"event of conflict between the documents referenced herein and " +
	"the content of this specification, the contents of this " +
	"specification shall be considered a superseding requirement.");

    paragraph ();
    print (SECTION_2_2_Non_Government_documents);

    paragraph ();
    print ("Technical society and technical association specifications and " +
        "standards are generally available for reference from libraries.  " +
	"They are also distributed among technical groups and using Federal " +
        "Agencies.");
}


// Implements the Interface Specification section of the IRS

// 10.1.5  Interface Specification

// This section shall be numbered 3.  and shall be divided into the following
// paragraphs and subparagraphs to specify the requirements for those 
// interfaces to which this IRS applies.
//
// 10.1.5.1  Interface Diagrams.  This paragraph shall be numbered 3.1 and
// shall identify the interfaces among the CSCIs, HWCIs and critical items
// to which this specification applies.  One or more interface diagrams, as
// appropriate, shall be provided to depict the interfaces.  Each interface  
// shall be identified by name and project-unique identifier.

void
interface_specification_section ()
{
    string query;
    link one_link;
    note one_note = NULL;

    message ("IRS:  3. Interface Specification ...");
    paragraph (HeadingL1Format);
    print ("Interface Specification");

    message ("IRS:    3.1. Interface Diagrams ...");
    paragraph (HeadingL2Format);
    print ("Interface Diagrams.");

    paragraph(SubSectionBodyFormat);
    if (narrative_document)
    {
	print ("The figure which depicts the interfaces between the CSCI " +
	    "being defined here and the other HWCIs and CSCIs in the system " +
	    "appears below.  Each interface described in this " +
	    "document is identified by name and project identifier.");
	include_external_interface_diagrams ("Interface Diagram");
    }
    else
    {
	print ("The figure which depicts the interfaces between the CSCI " +
	    "being defined here and the other HWCIs and CSCIs in the system " +
	    "appears in Appendix A.  Each interface described in this " +
	    "document is identified by name and project identifier.");
    }

    query = "link[external_interfaces && " +
	"link_refs[file[name == 'top']]] sort by name";
    for_each_in_select(query, one_link)
    {
	paragraph();
	print_line("Interface Name:  " + one_link.name);
	print("Identifier:  " + find_unique_identifier(one_link.id));
	print_note_description(one_link.id, SubSectionBodyFormat, "GenericObject");
    }
    interface_identification_paragraph ();
}



// Implements the Interface Identification paragraph of the IRS

// 10.1.5.2  (Interface name and project-unique identifier). This paragraph
// shall be numbered 3.X (beginning with 3.2), shall identify an interface by
// name and project-unique identifier, and shall state its purpose.  This
// paragraph shall be divided into the following subparagraphs to specify
// the requirements for the interface and for the data transmitted across
// the interface.

void
interface_identification_paragraph ()
{
    string query;
    link one_link = NULL;
    note one_note = NULL;
    item one_item = NULL;
    int i;
    set lk_set;
    

    message ("IRS:    3.2 Interface Identification ...");

    //PEC mod 11/17/95 printing interfaces in alpha order per rts#8102
    query = "link[external_interfaces] sort by name";

    lk_set = set_select(query);

    for( i = 0; i < set_count(lk_set); i = i + 1)
    {
	one_link = set_get_element(lk_set, i);

	query = "item[InterfaceName && note[InterfaceRequirement && " +
	    "obj_id = ${one_link.id}]]";
	one_item = find_by_query(query);
	if (one_item != NULL)
	{
	    paragraph (HeadingL2Format);
	    print(one_item.value + " Interface (" + 
		find_unique_identifier(one_link.id) +")" );

	    print_note_description(one_link.id, SubSectionBodyFormat, "GenericObject");

	    interface_requirements_subparagraph (one_link.id);
	    data_requirements_subparagraph (one_link.id, one_link,
		 one_item.value); 
	}
    }
    
    set_clear(lk_set);
}

// Implements the Interface requirements paragraph of the IRS

// 10.1.5.2.1  Interface requirements.  This subparagraph shall be numbered
// 3.X.1 (beginning with 3.2.1) and shall specify the following, as 
// applicable:

// a.  Whether the interfacing CSCIs are to execute concurrently or
//     sequentially.  If concurrently, the method of inter-CSCI synchronization
//     to be used.
// b.  The communication protocol for the interface.
// c.  The priority level of the interface.

void
interface_requirements_subparagraph (int link_id)
{
    string query;
    note one_note = NULL;
    string item_value = NULL;

    message ("IRS:    Interface requirements subparagraph...");
    paragraph (HeadingL3Format);
    print ("Interface Requirements");
    paragraph(SubSectionBodyFormat);
    print("The following interface requirements have been identified.");
    {
	query = "note[InterfaceRequirement && obj_id = " + link_id + "]";
	one_note = find_by_query(query);
	if (one_note != NULL)
	{
	    item_value = get_note_item(one_note.id, "Execution");
	    if (item_value != "")
	    {
		print_line();
		print("Method of Execution: " + item_value);
	    }

	    item_value = get_note_item(one_note.id, "Synchronization");
	    if (item_value != "")
	    {
		print_line();
		print("Method of Synchronization: " + item_value);
	    }

	    item_value = get_note_item(one_note.id, "PriorityLevel");
	    if (item_value != "")
	    {
		print_line();
		print("Priority Level: " + item_value);
	    }

	}

	query = "note[CommunicationProtocol && obj_id = " + link_id + "]";
	one_note = find_by_query(query);
	if (one_note != NULL)
	{
	    item_value = get_note_item(one_note.id, "CommunicationProtocol");
	    if (item_value != "")
	    {
		print_line();
		print("Communication Protocol: " + item_value);
	    }
	}
    }
}

// Implements the Data Requirements subparagraph of the IRS

// 10.1.5.2.2  Data requirements.  This paragraph shall be numbered 3.X.2
// (beginning with 3.2.2) and shall specify, in a data element definition
// table, the following information, as applicable, for each data element
// transmitted across the interface:

// a.  A project-unique identifier for the data element
// b.  A brief description of the data element
// c.  The CSCI, HWCI, or critical item that is the source of the data element.
// d.  The CSCI(s), HWCI(s), or critical item(s) that are the users of
//     the data element.
// e.  The units of measure required for the data element, such as
//     seconds, meters, kilohertz, etc.
// f.  The limit/range of values requried for the data element (for 
//     constants provide the actual value)
// g.  The accuracy required for the data element
// h.  The precision or resolution required for the data element in
//     terms of significant digits.

void
data_requirements_subparagraph (int Object_ID, link fname, string interface_nm)
{
    string caption;
    string new_fname;

    paragraph (HeadingL3Format);
    print ("Data Requirements");
    paragraph(TableBodyCellFormat);
    print ("The following table describes the data being transmitted across the interface.");

    new_fname = string_search_and_replace(fname.name," ", "_");
    if (ddt_initialized == False)
    {
	initialize_data_definition_table1("IRS_ddt1",Object_ID, new_fname);
	initialize_data_definition_table2("IRS_ddt2",Object_ID, new_fname);
	ddt_initialized = True;
    }

    caption = interface_nm + " Data Element Definition Table";
    fill_data_definition_tables(Object_ID, fname.name, caption);
} 

// Implements the fourth section of the IRS, which is not applicable


void
Section4 ()
{
    message ("IRS:  4. Quality Assurance ...");
    paragraph (HeadingL1Format);
    print ("Quality Assurance");
    paragraph (SubSectionBodyFormat);
    print ("NONE");
}

// Implements the fifth section of the IRS, which is not applicable


void
Section5 ()
{
    message ("IRS:  5. Preparation for delivery ...");
    paragraph (HeadingL1Format);
    print ("Preparation for Delivery");
    paragraph (SubSectionBodyFormat);
    print ("NONE");
}


void
notes_section ()
{
    message ("IRS:  6. Notes ...");
    paragraph (HeadingL1Format);
    print ("Notes.");
    paragraph (SubSectionBodyFormat);
    print (SECTION_6_notes);
    paragraph ();
    print (SECTION_6_abbreviations);
}

void
appendices_section ()
{
    // Narrative vs Reference flag will determine the appendices to
    // be included

    if (!narrative_document)
    {
	message ("IRS:  Appendix A");
	paragraph (AppendixL1StartFormat);
	print ("IRS figures.");
	appendix_A_subsection ();
    }
}

void
appendix_A_subsection ()
{
    paragraph (AppendixL2Format);
    print ("Interface Diagram");
    paragraph (SubSectionBodyFormat);
    include_external_interface_diagrams ("Interface Diagram");
}


