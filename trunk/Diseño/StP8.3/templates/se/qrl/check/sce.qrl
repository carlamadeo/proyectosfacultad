
// 	StP/SE
// 	Confidential property of Aonix
// 	Copyright (c) 1992-1999
// 	All rights reserved
//

#include "qrl/check/check_common.inc"
#include "qrl/include/return_codes.inc"
#include "qrl/check/check_sce.impl"
#include "se/qrl/include/se_utils.inc"

const string    SCRIPT_DESCRIPTION = "SCE Semantic Checks";

external string files = "";
external_help = "The name(s) of the diagram(s) to be checked.";

external int check_one = 1;
external_help = "Check that all modules have a formal SCE definition. That is, it must must either be connect directly to a formal caller or have no in links.";

external int check_two = 1;
external_help = "Check that all modules have children or a PDL definition.";

external int check_three = 1;
external_help = "Check that all actual parameters do NOT have Data Type annotations.";

external int check_four = 1;
external_help = "Check that all formal parameters DO have Data Type annotations.";

external int check_five = 1;
external_help = "Check that parameters on formal calls and corresponding actual calls match in number and type.";

external int check_six = 1;
external_help = "Check that all return types, parameter types, and global data types are defined in a DSE or IM diagram, or are a built in C type.";

external int check_seven = 1;
external_help = "Check that for every off page connector with an outgoing link, there is s corresponding one with an ingoing link, and visa versa";

external int verbose = 0;	
external_help = "Print ongoing status information?";

script_help = "This template performs semantic checks on SCE Diagrams";


int
main()
{
    sceprop_tp	props;

    props.verbose = verbose;
    props.check_one = check_one;
    props.check_two = check_two;
    props.check_three = check_three;
    props.check_four = check_four;
    props.check_five = check_five;
    props.check_six = check_six;
    props.check_seven = check_seven;

    props.diaglist = file_list("SceDiagram", files);

    return checkSceSemantics(props, NULL, NULL);
}
