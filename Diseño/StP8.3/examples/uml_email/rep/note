3053038019501021307303800035102131030387000210213173158019361041if (Owns.empty()) { cout << "No messages\n"; return; }cout << "Mailbox contents for " << mbxname() << ":\n";Owns.printMbx();cout << "Type message number:";int n;if ((cin >> n) == 0){	cout << "Invalid number\n";	cin.clear();	cin.ignore(80, '\n');	return;}Owns.printMsg(n);
319315801950104132131580003510413263248019361061if (Owns.empty()) { cout << "No messages\n"; return; }cout << "Mailbox contents for " << mbxname() << ":\n";Owns.printMbx();
328324801950106133032480003510613363348019361081cout << "Login: ";char buf[bufsize];cin >> buf;User* user = findUser(buf);if (user != NULL) user->start();else cout << buf << " is not a user\n";
338334801950108134033480003510813453438019361101char buf[bufsize];cout << "Type the name of the user or conference to delete: ";cin >> buf;User* oldUser;Conference* oldConf;if ((oldUser = findUser(buf)) != NULL) {	users.remove(oldUser);	delete oldUser;}else if ((oldConf=findConf(buf)) != NULL){	conferences.remove(oldConf);	delete oldConf;}else 	cout << buf << " is not a user or conference\n";
347343801950110134934380003511013543528019361121char c;char *s;for (;;){	int i = 0;	cout << "\n";	while ((s = menu[i++]) != NULL)		cout << s << "\n";	if (cin >> c == 0) { c='x'; cin.clear(); }	switch (c)	{	case 'u': case 'U': createUser(); break;	case 'c': case 'C': createConf(); break;	case 'd': case 'D': deleteUserOrConf(); break;	case 'l': case 'L': loginUser();  break;	case 'q': case 'Q': cout << "Quitting\n";				goto quit;	default: cout << c << " not understood\n";		break;	}}quit:return;
356352801950112135835280003511213643628019361141return name;
366362801950114136836280003511413733718019361161// this user is logged in and now has controlchar c;char *s;for (;;){	int i = 0;	cout << "\n";	while ((s = menu[i++]) != NULL)		cout << s << "\n";	if (cin >> c == 0) { c='x'; cin.clear(); }	switch (c)	{	case 'j': case 'J': joinConf(); break;	case 'm': case 'M': currentRx->printMbx(); break;	case 'r': case 'R': currentRx->readMsg();  break;	case 's': case 'S': sendMsg();  break;	case 'o': case 'O': cout << "Logged out\n";				goto quit;	default: cout << c << " not understood\n";				break;	}}quit:	return;
375371801950116137737180003511613823808019361181const bufsize = 80;char buf[bufsize];Message *msg = new Message(name);cout << "To:";cin >> buf;Receiver* rx = HasMembers->findUserOrConf(buf);if (rx != NULL){	cin.getline(buf, bufsize); // to clear newline	msg->fromTerminal();	msg->sendTo(rx);}else{	cout << buf << " is not a user or conference\n";	cin.getline(buf, bufsize); // to clear newline	delete msg;}
384380801950118138638080003511813913898019361201const bufsize = 80;char buf[bufsize];cout << "Join conference:";cin >> buf;Conference* conf = HasMembers->findConf(buf);if (conf != NULL){	currentRx = conf;}else if (String(buf) == "mail")	currentRx = this;else	cout << buf << " is not a conference\n";cout << "Current conference is " << currentRx->mbxname() << "\n";
393389801950120139538980003512014003988019241221402398801950122140539880003512214093338019241241411333801950124141333380003512414184168019241261420416801950126142241680003512614274258019361281char buf[bufsize];cout << "Type a name for the new user: ";cin >> buf;if (findUserOrConf(buf) != NULL)	cout << buf << " is already in use\n";else{	User* user = new User(buf, this);	users.add(user);}
429425801950128143142580003512814384368019561301442436801950130144443680003513014504488019561321455448801950132145744880003513214624608019561341467460801950134146946080003513414754738019561361479473801950136148147380003513614874858019561381489485801950138149148580003513814974958019561401499495801950140150149580003514015075058019561421510505801950142151250580003514215175158019561441520515801950144152351580003514415273148019241461530314801950146153231480003514615385368019561481541536801950148154353680003514815485468019561501552546801950150155454680003515015605588019561521563558801950152156555880003515215715698019561541575569801950154157756980003515415835818019561561586581801950156158858180003515615935918019561581596591801950158159859180003515816036018019501601605601800035160160860180196416016126108019361621return (User*) users.find(s);
614610801950162161661080003516216216198019361641return (Conference*) conferences.find(s);
623619801950164162561980003516416306288019361661return (Message*)Consistsof.add(m);
63262880195016616346288000351661638484801950168164148480003516816466448019361701CollIterator next(Consistsof);Message* msg;int n = 1;while (msg = (Message*)next())	if (n++ == num) { msg->print(); return; }cout << "Invalid number\n";
648644801950170165064480003517016556538019361721to = u; u->receiveMsg(this);
65765380195017216596538000351721664662801950174166666280003517416716698019361761Owns.add(m);
6736698019501761675669800035176168067880195017816826788000351781686434801950180168843480003518016946928019561821698692801950182170069280003518217044728019501841706472800035184171271080195618617167108019501861718710800035186172253580195018817245358000351881728447801950190173044780003519017357338019361921cout << "From: " << from << "\n";cout << "To: " << *to << "\n";cout << "Subject: " << header << "\n";cout << body;
737733801950192173973380003519217447428019361941CollIterator next(Consistsof);Printable *msg;int n = 1;while (msg = next())	cout << n++ << " " << *msg << "\n";
746742801950194174874280003519417537518019361961return Consistsof.empty();
755751801950196175775180003519618088048015711981The sys admin shall have the capability to create new users in the system by name.8148108015711981Users shall be able to log into the system by entering their name.8208168015711981Users shall be able to log out of the system.8268228015711981The sys admin shall have the capability to delete users from the system by specifying thier name.8338298015711981The sys admin shall have the capability to create new conferences in the system by name.8398358015711981Any user of the email system shall have the capability to join a conference.8458418015711981The sys admin shall have the capability to delete existing conferences by name.8528488015711981Users of the email system shall have the  capability to send messages to another user or to a conference.8598558015711981Users of the email system shall have the capability to view the headers of messages in their mailbox or the mailbox of a conference.8658618015711981Users of the email system shall have the capability to read a specific message they select from their mailbox or the mailbox of a conference.8688548015711981Users of the email system shall have the capability to read messages they have received.8718478015711981Users of the email system shall have the capability to send messages8748288015711981The email system shall have conferences which pertain to a common topic.8778038015711981The email system shall support users.1303691801923204113081219801923206113131220801923208113181012801902210113201012801900210113221012801906210113241012801907210113261012801971210113291327801938210113321330801938210113341023801938210113361327801934210113381330801934210113401023801934210113421327801944210113441330801944210113461023801944210113481327801945210113501330801945210113521023801945210113541327801970210113561330801970210113581023801970210113605688019232101136310128019042101137113278019402101138513308019402101139910238019402101142041680192321211425101380190221411427103380190221411429101380190021411431103380190021411433101380190621411435103380190621411437101380190721411439103380190721411441101380197121411443103380197121411446144480193821411449144780193821411451628801938214114537428019382141145564480193821411457751801938214114591444801934214114611447801934214114636288019342141146574280193421411467644801934214114697518019342141147114448019442141147314478019442141147562880194421411477742801944214114796448019442141148175180194421411483144480194521411485144780194521411487628801945214114897428019452141149164480194521411493751801945214114951444801970214114971447801970214114996288019702141150174280197021411503644801970214115057518019702141150749480192321411510101380190421411518103380190421411526144480194021411541144780194021411555628801940214115707428019402141158564480194021411600751801940214116251002801902216116271003801902216116291002801900216116311003801900216116331002801906216116351003801906216116371002801907216116391003801907216116411002801971216116431003801971216116461644801938216116486108019382161165061980193821611652334801938216116543438019382161165635280193821611658425801938216116601644801934216116626108019342161166461980193421611666334801934216116683438019342161167035280193421611672425801934216116741644801944216116766108019442161167861980194421611680334801944216116823438019442161168435280194421611686425801944216116881644801945216116906108019452161169261980194521611694334801945216116963438019452161169835280194521611700425801945216117021644801970216117046108019702161170661980197021611708334801970216117103438019702161171235280197021611714425801970216117163338019232161171910028019042161172910038019042161173916448019402161175461080194021611769619801940216117843348019402161179934380194021611814352801940216118294258019402161185510148019022181185710158019022181185910168019022181186110178019022181186310148019002181186510158019002181186710168019002181186910178019002181187110148019062181187310158019062181187510168019062181187710178019062181187910148019072181188110158019072181188310168019072181188510178019072181188710148019712181188910158019712181189110168019712181189310178019712181189618948019382181189866280193821811900653801938218119027338019382181190418948019342181190666280193421811908653801934218119107338019342181191218948019442181191466280194421811916653801944218119187338019442181192018948019452181192266280194521811924653801945218119267338019452181192818948019702181193066280197021811932653801970218119347338019702181193643580192321811939101480190421811948101580190421811957101680190421811966101780190421811975189480194021811990662801940218120046538019402181201973380194021812044103080193822012046103180193822012048103080193422012050103180193422012052103080194422012054103180194422012056103080194522012058103180194522012060103080197022012062103180197022012064102880192322012067103080194022012077103180194022012091100580190222212093100480190222212095100680190222212097100780190222212099100580190022212101100480190022212103100680190022212105100780190022212107100580190622212109100480190622212111100680190622212113100780190622212115100580190722212117100480190722212119100680190722212121100780190722212123100580197122212125100480197122212127100680197122212129100780197122212132213080193822212135213380193822212137315801938222121393248019382221214166980193822212143213080193422212145213380193422212147315801934222121493248019342221215166980193422212153213080194422212155213380194422212157315801944222121593248019442221216166980194422212163213080194522212165213380194522212167315801945222121693248019452221217166980194522212173213080197022212175213380197022212177315801970222121793248019702221218166980197022212183314801923222121861005801904222121951004801904222122041006801904222122131007801904222122222130801940222122372133801940222122513158019402221226632480194022212281669801940222123092307801902224123122310801902224123142307801900224123162310801900224123182307801906224123202310801906224123222307801907224123242310801907224123262307801971224123282310801971224123312329801938224123342332801938224123372335801938224123402338801938224123432341801938224123452329801934224123472332801934224123492335801934224123512338801934224123532341801934224123552329801944224123572332801944224123592335801944224123612338801944224123632341801944224123652329801945224123672332801945224123692335801945224123712338801945224123732341801945224123752329801970224123772332801970224123792335801970224123812338801970224123832341801970224123852306801923224123882307801904224123972310801904224124062329801940224124202332801940224124352335801940224124502338801940224124652341801940224124891026801902226124911026801900226124931026801906226124951026801907226124971026801971226124991027801938226125011027801934226125031027801944226125051027801945226125071027801970226125091025801923226125121026801904226125171027801940226125311032801938228125331032801934228125351032801944228125371032801945228125391032801970228125413988019232281254410328019402281255770980192323012562100880190223212564100980190223212566101080190223212568101180190223212570100880190023212572100980190023212574101080190023212576101180190023212578100880190623212580100980190623212582101080190623212584101180190623212586100880190723212588100980190723212590101080190723212592101180190723212594100880197123212596100980197123212598101080197123212600101180197123212603260180193823212606260480193823212608362801938232126103718019382321261238080193823212614389801938232126162601801934232126182604801934232126203628019342321262237180193423212624380801934232126263898019342321262826018019442321263026048019442321263236280194423212634371801944232126363808019442321263838980194423212640260180194523212642260480194523212644362801945232126463718019452321264838080194523212650389801945232126522601801970232126542604801970232126563628019702321265837180197023212660380801970232126623898019702321266436180192323212667100880190423212677100980190423212686101080190423212695101180190423212704260180194023212719260480194023212733362801940232127483718019402321276338080194023212778389801940232130043002801954UmlSequenceDiagram236130243022801929UmlSequenceDiagram%Send_Message__1%20236130333031801929UmlSequenceDiagram%Send_Message__1%18236130423040801929UmlSequenceDiagram%Send_Message__1%19236130513049801929UmlSequenceDiagram%Send_Message__1%17236130603058801929UmlSequenceDiagram%Send_Message__1%16236130693067801929UmlSequenceDiagram%Send_Message__1%15236130783076801929UmlSequenceDiagram%Send_Message__1%14236130873085801929UmlSequenceDiagram%Send_Message__1%13236130963094801929UmlSequenceDiagram%Send_Message__1%10236132033002801954UmlCollaborationDiagram238132143031801929UmlCollaborationDiagram%Send_Message_1%46238132233221801929UmlCollaborationDiagram%Send_Message_1%47238132313049801929UmlCollaborationDiagram%Send_Message_1%48238132393058801929UmlCollaborationDiagram%Send_Message_1%49238132473067801929UmlCollaborationDiagram%Send_Message_1%50238132553076801929UmlCollaborationDiagram%Send_Message_1%51238132643262801929UmlCollaborationDiagram%Send_Message_1%52238132723094801929UmlCollaborationDiagram%Send_Message_1%532381341134098019512401341834168019512401342534238019512401343234308019512401343934378019512401351435128019502421351935178019512421352435228019512421352935278019512421353435328019512421353935378019512421354435428019512421355235508019512421355735558019512421356235608019512421356735658019512421