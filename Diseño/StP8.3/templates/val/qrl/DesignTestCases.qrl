//*****************************************************************************
// DESCRIPTION: DesignTestCases.qrl
//              ----------------------
//              (c) 1998 by AONIX
//*****************************************************************************
// This qrl script is a part of StP Validator product. It uses tdriver to per-
// form a design of test cases for specified UseCases (see external variable 
// UseCases).
// example: 
//   "qrp -p c:/StP/work/ -s mal_aos -x UseCases 'AddCustomerInformation'  \
//    -x T_satisfy_preconditions FALSE -x T_spacing 1 -x T_message_level 3 \
//    val/qrl/DesignTestCases.qrl"
// 
//*****************************************************************************
// Input Files (requred by TDriver): 
//    tldb  (in path)
//    SDDB  (must be generated durring previous step: )
//
// Output Files (produced by TDriver):
//    drf.p - Design Rule Generator - preprocessor output(ASCII)
//    TDDB  - Test Description Data Base (Binary)
//    samples.rpt - Samples Report (ASCII)
//    catalog.rpt - Test Catalog Report (ASCII)
//    summary.rpt - Test Case Summary Report (ASCII)
//
// Output Files (produced by DesignTestCases.qrl):
//    <usecase name>1.cdf - Auxiliary File for creating <usecase name>.cdf
//    <usecase name>.cdf  - test Case Description File (ASCII)
//    ./UseCaseTestScripts/scenario.rpt - Report ASCII
//    design.rpt  - Design Rule Check Report (ASCII)
//    prepare.rpt - Test Case Preparation Report (ASCII)
//*****************************************************************************

external string UseCases;

#include "val/qrl/include/TConfig.inc"
#include "val/qrl/include/TUseCase.inc"
#include "val/qrl/include/DesignTestCase.inc"
#include "val/qrl/include/Progress.inc"
#include "val/qrl/include/tdrvMessaging.inc"
#include "val/qrl/include/CreateDir.inc"

void 
main ()
{

  initProgress(15);
  initValidatorOperationMessage("Design Test Cases", UseCases);

  string sOutputPath = current_projdir() + current_system() + "/test_files/";
  string sOutputDir;

  list lstTestUnits, lstTestUnitIds;
  int count, i;
  string sUseCaseName, sTestUnitId;
  string sCdfFile;

  lstTestUnitIds = list_create("string", 0);
  lstTestUnits = string_to_list (UseCases, " ");

  count = list_count (lstTestUnits);
  updateProgress("Checking data from previous steps...");
  for (i=0;i<count;i=i+1)
  {
      sUseCaseName = list_get(lstTestUnits,i);
      if (!CheckExistance (sUseCaseName) )
        {
          validatorWarningMessage("Use Case: " + sUseCaseName + " is not in the selected model");
          continue;
        }

      sTestUnitId = Get_T_test_unit_id(sUseCaseName, "");
      sOutputDir = sOutputPath + sTestUnitId;
      if (!CheckForSDF(sOutputDir, "SDDB"))
      {
         validatorWarningMessage("SDDB file for " + sTestUnitId + " does not exist.");
         continue;
      }

      sCdfFile = formatTraceData(sTestUnitId, sOutputPath);
      list_append(lstTestUnitIds, sTestUnitId);
  }

  validatorUserMessage("Calling TDriver to Design and Prepare Test Cases ..");
  validatorUserMessage(" ..for Use Cases: " + list_to_string(lstTestUnitIds, ", "));
  progress("Generating Data for Use Cases...", 100);
  
  if (list_count(lstTestUnitIds) > 1 )
    tdriverDP(list_to_string(lstTestUnitIds, " -U "), sOutputPath + " -sf 1.cdf -pl 1 ", "UseCaseTestScripts");
  else
  {
    tdriverDP(list_get(lstTestUnitIds, 0), sCdfFile + " -pl 1 ", "UseCaseTestScripts");
    
    //........?????????..........  
    // tdriverDesign(list_get(lstTestUnitIds, 0));
    // tdriverPrepare(list_get(lstTestUnitIds, 0), sCdfFile, "UseCaseTestScripts");
  }

  doneProgress();
  finalizeValidatorOperationMessage("Design Test Cases");

}



