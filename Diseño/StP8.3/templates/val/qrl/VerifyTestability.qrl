//*****************************************************************************
// DESCRIPTION: VerifyTestability.qrl
//              ----------------------
//              (c) 1998 by AONIX
//*****************************************************************************
// This qrl script is a part of StP Validator product. It uses tdriver to 
// verify testability of the specified UseCases (see external variable 
// UseCases).
// example: 
//
// 
//*****************************************************************************
// Input Files (requred by TDriver): 
//  tldb, 
//  sdf - Software Description File (ASCII, TSDL). Must be produced by previous
//	  step: "Extract SDF", see ExtractModel.qrl .
//
// Output Files (produced by TDriver):
//
//  sddb  - Software Description Data Base (Binary),
//  sdf.p - Preprocessor output(ASCII),
//  Star  - Axiliary file (Binary),
//  cref.rpt - Cross Reference Report (ASCII),
//  sdmetric.rpt - Software Description Metrics Report (ASCII),
//  verify.rpt   - Verification Report (ASCII, Compiler Phase).
//
//*****************************************************************************

external string UseCases;

#include "val/qrl/include/TConfig.inc"
#include "val/qrl/include/TUseCase.inc"
#include "val/qrl/include/Progress.inc"
#include "val/qrl/include/tdrvMessaging.inc"
#include "val/qrl/include/CreateDir.inc"

void 
main ()
{

  initProgress(20);
  initValidatorOperationMessage("Generate Test Cases / Verify Testability", UseCases);

  string sOutputPath = current_projdir() + current_system() + "/test_files/";
  string sOutputDir;

  list lstUseCases, lstTestUnitIds;
  int count1, i;
  string sUseCaseName, sTestUnitId;
  string sSysDir = current_projdir() + current_system() + "/";

  lstTestUnitIds = list_create("string", 0);
  lstUseCases = string_to_list (UseCases, " ");

  count1 = list_count (lstUseCases);
  
  updateProgress("Checking SDFs...");
  for (i=0;i<count1;i=i+1)
    {
      sUseCaseName = list_get(lstUseCases,i);

      if (!CheckExistance (sUseCaseName) )
        {
          validatorErrorMessage("Use Case: " + sUseCaseName + " is not in the selected model");
          continue;
        }

      sTestUnitId = Get_T_test_unit_id(sUseCaseName, "");

      sOutputDir = sOutputPath + sTestUnitId;
      if (CheckForSDF(sOutputDir, "sdf"))
        {
//          system ("date > " + sSysDir + "start");
//          tdriverVerify (sTestUnitId);
//          system ("date > " + sSysDir + "stop");
//          AddTime("VerifySDF", sOutputDir  );
            list_append(lstTestUnitIds, sTestUnitId);
        }
      else
         validatorErrorMessage("SDF file for " + sTestUnitId + " does not exist.");
    }

  updateProgress("Compiling SDFs...");

  validatorUserMessage("Calling TDriver to compile SDFs...");
  tdriverVerify (list_to_string(lstTestUnitIds, " -U ") + " -pl " + (getProgressLevel() + 1));
  validatorUserMessage(" ");

  finalizeValidatorOperationMessage("Verify testability");
  doneProgress();
}

