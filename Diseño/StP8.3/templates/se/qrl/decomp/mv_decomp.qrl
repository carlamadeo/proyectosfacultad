
//      sccsid[] = %W% %Y% %D%
//      StP/SE
//      Confidential property of Interactive Development Environments, Inc.
//      Copyright (c) 1995
//      All rights reserved
//
// mv_decomp.qrl: script to move a decomposition from one file name to another.  


#include "qrl/decomp/mv_decomp.inc"

external string OrigFile = "";
external_help = "Original file to move. This file is the decomposition, be sure not use the name of the parent file.";

external string TargetFile = ""; 
external_help = "Target file to decomposition to. This file need not be at the same level as the OrigFile, nor need it be another name within OrigFile's decomposition.  For Example, if OrigFile is `6.1.1', and TargetFile is `New_Decomp', OrigFile will be moved to New_Decomp, and all decompositions will be below that file.";

external string Verbose = "True";
external_help = "Show details of what is taking place.";

external string Quiet = "False";
external_help = "No messages at all.";

external string Force = "False";
external_help = "Query user prior to removal";

void
main()

{
    file f;
    list l1, l2;
    boolean move_up, quiet = False;

    FromMain = True;
    RenameOpts = "";

    if (Force == "True")
	RenameOpts = RenameOpts + "-Force";

    if (Verbose == "True")
	RenameOpts = RenameOpts + " -verbose";

    if (Quiet == "True")
    {  
        quiet = True;
	RenameOpts = RenameOpts + " -Quiet";
    }

    if (OrigFile == "" || TargetFile == "")
    {
	print_error("OrigFile and TargetFile required.  mv_decomp cancelled.");
	return;
    }

    f = find_by_query("file[DfeDiagram && name = '${TargetFile}']");
    if (f != NULL)
    {
	print_error("Data flow diagram " + TargetFile + " exists already.  mv_decomp cancelled.");
	return;
    }
	
    f = find_by_query("file[DfeDiagram && name = '${OrigFile}']");
    if (f == NULL)
    {
	print_error("Data flow diagram " + OrigFile + " does not exist.  mv_decomp cancelled.");
	return;
    }
    
    l1 = string_to_list(OrigFile, ".");
    l2 = string_to_list(TargetFile, ".");

    if ((list_count(l1) < list_count(l2)) || OrigFile == "0")
	move_up = False;
    else
	move_up = True;

    // It all looks ok. Go for it.

    do_mv_decomp(f, TargetFile, quiet, move_up);
    return;
}
