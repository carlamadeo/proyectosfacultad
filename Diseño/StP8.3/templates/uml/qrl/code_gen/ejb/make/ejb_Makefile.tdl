/***********************************************
 *
 * Creates Make- and Buildfiles for the 
 * Deployment of EJBs
 *
 * Author:  Frank Lippert
 * Company: Aonix GmbH
 * Date:    12/08/2000
 *
 * History:
 * =============================================
 * DATE        WHO      CHANGE
 * ---------------------------------------------
 * 12/08/2000  Lippert  created
 * 12/27/2000  Lippert  Separation into 
 *                      Make- and Buildfiles.
 * 01/21/2002  Lippert  Prepared Makefiles for
 *                      selective code generation.
 **********************************************/


// Generates a Makefile for NT/W2k systems
template genMakefileNT()
: ------------------------------------------------
: 
: "Makefile" for NT/W2k systems
:
: ------------------------------------------------

: ------------------------------------------------
: sets variables for programms and libraries
: ------------------------------------------------
set JAVA_HOME=[java_home_nt]
set J2EE_HOME=[j2ee_home_nt]
set JAVAC=[javac_nt]
set JAR=[jar_nt]

: -------------------------------------------------
: set pathes for source files and build directories
: -------------------------------------------------
set BASE_DIR=[replace([srcdir], "/", "\\")]
set SRC_DIR=%BASE_DIR%\\src
set BUILD_DIR=%BASE_DIR%\\build
set CLASSPATH=%J2EE_HOME%\lib\j2ee.jar;%JAVA_HOME%\jre\lib\rt.jar;%SRC_DIR%
[if ([ejb_server] == "wls")]
set WLS_HOME=[wls_home_nt]
set EJBC=%WLS_HOME%\\bin\\[ejbc_nt] 
[end if]

[if ([package_mode] == "toplevel")]
  [if ([class_id_list] == "")]
    [loop(Instances->MPackage Where !hasLoop(MPackage->Domain))]
call %BUILD_DIR%\\[MPackage.name]\build.bat
		[if ([ejb_server] == "wls")]
call %BUILD_DIR%\\[replace([MPackage.name], "/", "\\")]\\wls_ejbcompile.bat
		[end if]
    [end loop]
  [else]
    [loop(Instances->MPackage Where !hasLoop(MPackage->Domain) && [MPackage:marked])]
call %BUILD_DIR%\\[MPackage.name]\build.bat
		  [if ([ejb_server] == "wls")]
call %BUILD_DIR%\\[replace([MPackage.name], "/", "\\")]\\wls_ejbcompile.bat
		  [end if]
    [end loop]
  [end if]
[end if]
end template


// Generates a Makefile for Unix systems
template genMakefileUnix()
#!/bin/sh
# ------------------------------------------------- 
#
# "Makefile" for Unix systems
#
# -------------------------------------------------

# -------------------------------------------------
# sets variables for programms and libraries
# -------------------------------------------------
export JAVA_HOME = [java_home_unix]
export J2EE_HOME = [j2ee_home_unix]
export JAVAC     = [javac_unix]
export JAR       = [javac_unix]

# -------------------------------------------------
# set pathes for source files and build directories
# -------------------------------------------------
export BASE_DIR  = [replace([srcdir], "(\\\)", "/")]
export SRC_DIR   = $BASE_DIR/src
export BUILD_DIR = $BASE_DIR/build
export CLASSPATH = $J2EE_HOME/lib/j2ee.jar:$JAVA_HOME/jre/lib/rt.jar:$SRC_DIR
[if ([ejb_server] == "wls")]
export WLS_HOME=[wls_home_unix]
export EJBC=$WLS_HOME%/bin/[ejbc_unix] 
[end if]

[if ([package_mode] == "toplevel")]
  [if ([class_id_list] == "")]
    [loop(Instances->MPackage Where !hasLoop(MPackage->Domain))]
source $BUILD_DIR/[replace([MPackage.name], "(\\\)", "/")]/build.sh
		[if ([ejb_server] == "wls")]
source $BUILD_DIR/[replace([MPackage.name], "(\\\)", "/")]/wls_ejbcompile.sh
		[end if]
    [end loop]
  [else]
    [loop(Instances->MPackage Where !hasLoop(MPackage->Domain) && [MPackage:marked])]
source $BUILD_DIR/[replace([MPackage.name], "(\\\)", "/")]/build.sh
		  [if ([ejb_server] == "wls")]
source $BUILD_DIR/[replace([MPackage.name], "(\\\)", "/")]/wls_ejbcompile.sh
		  [end if]
    [end loop]
  [end if]
[end if]
end template



// Generates a Buildfile for a Package with EJBs
// suited for NT-Systems
template genBuildFileNT(MPackage As EJBPack)
if exist %BUILD_DIR%\\[replace([EJBPack.name], "/", "\\")]\\lib\\[EJBPack.name].jar del %BUILD_DIR%\\[replace([EJBPack.name], "/", "\\")]\\lib\\[EJBPack.name].jar

    [if(hasLoop(EJBPack->MClass))]
%JAVAC% -d %BUILD_DIR%\\[replace([EJBPack.name], "/", "\\")]\\classes %SRC_DIR%\\[replace([EJBPack.name], "/", "\\")]\\*.java 2> %BUILD_DIR%\\[replace([EJBPack.name], "/", "\\")]\\comp_[EJBPack.name].err
    [end if]
    [loop(Instances->MPackage([EJBPack:descendants]) As SubPack)]
        [if(hasLoop(SubPack->MClass))]
%JAVAC% -d %BUILD_DIR%\\[replace([EJBPack.name], "/", "\\")]\\classes %SRC_DIR%\\[replace([SubPack:dir_name], "/", "\\")]\\*.java 2> %BUILD_DIR%\\[replace([EJBPack.name], "/", "\\")]\\comp_[SubPack.name].err
        [end if]
    [end loop]


cd %BUILD_DIR%\\[replace([EJBPack.name], "/", "\\")]\\classes
if not exist [EJBPack.name].jar %JAR% cvf [EJBPack.name].jar * 2> %BUILD_DIR%\\[replace([EJBPack.name], "/", "\\")]\\jar_[EJBPack.name].err
if exist [EJBPack.name].jar     %JAR% uvf [EJBPack.name].jar * 2> %BUILD_DIR%\\[replace([EJBPack.name], "/", "\\")]\\jar_[EJBPack.name].err 

move [EJBPack.name].jar %BUILD_DIR%\\[replace([EJBPack.name], "/", "\\")]\\lib
end template



// Generates a Buildfile for a Package with EJBs
// suited for Unix-Systems
template genBuildFileUnix(MPackage As EJBPack)
if \[ -f $BUILD_DIR/[replace([EJBPack.name], "(\\\)", "/")]/lib/[EJBPack.name].jar ]: then rm $BUILD_DIR/[replace([EJBPack.name], "(\\\)", "/")]/lib/[EJBPack.name].jar: fi

    [if(hasLoop(EJBPack->MClass))]
$JAVAC -d $BUILD_DIR/[replace([EJBPack.name], "(\\\)", "/")]/classes $SRC_DIR/[replace([EJBPack.name], "(\\\)", "/")]/*.java 2> $BUILD_DIR/[replace([EJBPack.name], "(\\\)", "/")]/comp_[EJBPack.name].err
    [end if]
    [loop(Instances->MPackage([EJBPack:descendants]) As SubPack)]
        [if(hasLoop(SubPack->MClass))]
$JAVAC -d $BUILD_DIR/[replace([EJBPack.name], "(\\\)", "/")]/classes $SRC_DIR/[replace([SubPack:dir_name], "(\\\)", "/")]/*.java 2> $BUILD_DIR/[replace([EJBPack.name], "(\\\)", "/")]/comp_[SubPack.name].err
        [end if]
    [end loop]


cd $BUILD_DIR/[replace([EJBPack.name], "(\\\)", "/")]/classes
if \[ -f [EJBPack.name].jar ]: then $JAR cvf [EJBPack.name].jar * 2> $BUILD_DIR/[replace([EJBPack.name], "(\\\)", "/")]/jar_[EJBPack.name].err: fi
if \[ -f [EJBPack.name].jar ]: then $JAR uvf [EJBPack.name].jar * 2> $BUILD_DIR/[replace([EJBPack.name], "(\\\)", "/")]/jar_[EJBPack.name].err: fi 

mv [EJBPack.name].jar $BUILD_DIR/[replace([EJBPack.name], "(\\\)", "/")]/lib
end template