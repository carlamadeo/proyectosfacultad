/****************************************
 *
 * Templates for the generation of non-
 * EJB-related classes
 *
 * Author:  Frank Lippert
 * Company: Aonix GmbH
 * Date:    12/05/2000
 ***************************************/

// genNormalJavaClass(MClass)
// --------------------------
template genNormalJavaClass(MClass)
package [MClass:package_name];

import java.io.Serializable;


public class [MClass.name] implements Serializable {

    // Attributes
    [loop(MClass->MAttribute Where [MAttribute.binding] != "static")]
    [MAttribute.access] [MAttribute.type] [MAttribute.name];
    [end loop]
    
    // getter methods
    [loop(MClass->MAttribute Where [MAttribute.binding] != "static")]
    public [MAttribute.type] get[upcase_firstchar([MAttribute.name])]() {
        return [MAttribute.name];
    }
    [end loop]
}
end template


// genExceptionClass(MClass)
// --------------------------
template genExceptionClass(MClass) 
package [MClass:package_name];

public class [MClass.name] extends Exception {
    public [MClass.name]() {
        super();
    }
    public [MClass.name](String reason) {
        super(reason);
    }
}   
end template