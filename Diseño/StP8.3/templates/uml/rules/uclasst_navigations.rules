//
//      StP/UML
//      Confidential property of Aonix
//      Copyright (c) 1997
//      All rights reserved
//


CellType 1  Class
{
    { Methods
    	// Begin Add ECR3782
		{ Navigation
			{ Name NavToSuperClass }
			{ Label "Class's Immediate Super Class(es)" } // ECR 7293 - removed ellipsis
			{ MappingName Class }
			{ TargetFunc "LoadUMLClassTable(\"Super\",${file.id});" }
		}
		{ Navigation
			{ Name NavToSubClass }
			{ Label "Class's Immediate Sub Class(es)" } // ECR 7293 - removed ellipsis
			{ MappingName Class }
			{ TargetFunc "LoadUMLClassTable(\"Sub\",${file.id});" }
		}
		// End Add ECR3782				
		{ Navigation 
			{ Name ClassDiagram }
			{ Label "Class Diagram" }
			{ MappingName Class }
			{ Query "node_ref[node_id == ${node.id} && file[UmlClassDiagram]]" }	
			{ FailureCmd CreateClassDiagram }
		}
		{ Navigation 
			{ Name StateDiagram }
			{ Label "State Diagram for Class" }
			{ MappingName Class }
			{ Query "node_ref[node[UmlStateMachine && name = '${node.name}'] && file[UmlStateDiagram] ]" }
			{ FailureCmd CreateStateDiagramFromClass }
		}
		{ Navigation 
			{ Name ActivityDiagram }
			{ Label "Activity Diagram for Class" }
			{ MappingName Class }
			{ Query "node_ref[node[UmlStateMachine && name = '${node.name}'] && file[UmlActivityDiagram] ]" }
			{ FailureCmd CreateActivityDiagramFromClass }
		}
        	{ Navigation
			{ ParseCondition "is_valid_programming_env();" }
			{ Name ProgrammingEnvironment }
			{ Label "Programming Environment" }
			{ MappingName Class }
			{ TargetFunc "NavigateToPE(${node.id});" }
	        }
        	{ Navigation
			{ ParseCondition "!is_valid_programming_env() && !is_sniff_ok();" } // ECR 5277
			{ Name ProgrammingEnvironment }
			{ Label "Source Code" }
			{ MappingName Class }
			{ TargetFunc "BrowseViaSMDB(${node.id}, 0);" }
	        }
		{ Navigation
			{ Name Requirements }
			{ Label "Allocate Requirements" }
			{ MappingName Class }
			{ Eval "to_requirements_table_from_node(${node.id});" } 
		}	
	        { Navigation
                // ECR 5118 begin
                { ParseCondition "use_doors_integration();" }
                //{ ParseCondition "is_doors_available();" }
                // ECR 5118 end
		        { Name DOORS }
		        { Label "DOORS" }
			{ MappingName Class }
		        { Eval "node_navigate_to_doors(${node.id});" }
    		}
        // Begin Add ECR 4179
        { Navigation 
            { ParseCondition "is_sniff_ok();" }
            { Name SNiFFProgrammingEnvironmentSourceEditor }
            { Label "SNiFF Source Editor" }
            { TargetFunc "SNiFFNavToClass(${node.id}, \"edit_symbol\", \"CLASS\");" }
            { MappingName Class }
        }
        { Navigation 
            { ParseCondition "is_sniff_ok();" }
            { Name SNiFFProgrammingEnvironmentClassBrowser }
            { Label "SNiFF Class Browser" }
            { TargetFunc "SNiFFNavToClass(${node.id}, \"browse_class\", \"\");" }
            { MappingName Class }
        }
        { Navigation 
            { ParseCondition "is_sniff_ok();" }
            { Name SNiFFProgrammingEnvironmentHierarchyBrowserFull }
            { Label "SNiFF Class Hierarchy Browser" }
            { TargetFunc "SNiFFNavToClass(${node.id}, \"hierarchy\", \"FULL\");" }
            { MappingName Class }
        }
        { Navigation 
            { ParseCondition "is_sniff_ok();" }
            { Name SNiFFProgrammingEnvironmentHierarchyBrowserRestricted }
            { Label "SNiFF Class Hierarchy Browser (only relatives)" }
            { TargetFunc "SNiFFNavToClass(${node.id}, \"hierarchy\", \"RESTRICTED\");" }
            { MappingName Class }
        }
        { Navigation 
            { ParseCondition "is_sniff3_ok();" } // ECR 7361
            { Name SNiFFProgrammingEnvironmentRetriever }
            { Label "SNiFF Retriever" }
            { TargetFunc "SNiFFNavToClass(${node.id}, \"retrieve\", \"\");" }
            { MappingName Class }
        }
        // End Add ECR 4179
	}
}

CellType 10 AttributeName
{
	{ Methods
		{ Navigation
			{ ParseCondition "is_valid_programming_env();" }
			{ Name ProgrammingEnvironment }
			{ Label "Programming Environment" }
			{ MappingName Attribute }
			{ TargetFunc "NavigateToPE(${node.id});" }
		}
		{ Navigation
			{ ParseCondition "!is_valid_programming_env() && !is_sniff_ok();" } // ECR 5277
			{ Name ProgrammingEnvironment }
			{ Label "Source Code" }
			{ MappingName Attribute }
			{ TargetFunc "BrowseViaSMDB(${node.id}, 0);" }
		}
		{ Navigation
			{ Name Requirements }
			{ Label "Allocate Requirements" }
			{ MappingName Attribute }
			{ Eval "to_requirements_table_from_node(${node.id});" }
		} 
	        { Navigation
                // ECR 5118 begin
                { ParseCondition "use_doors_integration();" }
                //{ ParseCondition "is_doors_available();" }
                // ECR 5118 end
		        { Name DOORS }
		        { Label "DOORS" }
			{ MappingName Attribute }
		        { Eval "node_navigate_to_doors(${node.id});" }
		}
        // Begin Add ECR 4179
        { Navigation
            { ParseCondition "is_sniff_ok();" }
            { Name SNiFFProgrammingEnvironmentSourceEditor }
            { Label "SNiFF Attribute Definition" }
            { MappingName Attribute }
            { TargetFunc "SNiFFNavToClassPart(${node.id}, \"edit_symbol\", \"INSTVAR\");" }
        }
        { Navigation 
            { ParseCondition "is_sniff3_ok();" } // ECR 7361
            { Name SNiFFProgrammingEnvironmentRetriever }
            { Label "SNiFF Retriever" }
            { TargetFunc "SNiFFNavToClass(${node.id}, \"retrieve\", \"\");" }
            { MappingName Attribute }
        }
        // End Add ECR 4179		
	}
}

CellType 110 OperationName
{
	{ Methods 
		{ Navigation 
			{ Name StateDiagram }
			{ Label "State Diagram for Operation" }
			{ MappingName Operation }
			{ TargetFunc "uml_state_or_act_nav_targets(${node.id},\"UmlStateDiagram\");" }
			{ FailureCmd CreateStateDiagramFromOperation }
		}
		{ Navigation 
			{ Name ActivityDiagram }
			{ Label "Activity Diagram for Operation" }
			{ MappingName Operation }
			{ TargetFunc "uml_state_or_act_nav_targets(${node.id},\"UmlActivityDiagram\");" }
			{ FailureCmd CreateActivityDiagramFromOperation }
		}
		{ Navigation 
			{ ParseCondition "is_smdb_available() || !is_valid_programming_env() && !is_sniff_ok();" } // ECR 5277
			{ Name ProgrammingEnvironmentDecl }
			{ Label "Source Code Declaration" }
			{ MappingName Operation }
			{ TargetFunc "BrowseViaSMDB(${node.id}, 0);" }
		}
		{ Navigation 
			{ ParseCondition "is_smdb_available() || !is_valid_programming_env() && !is_sniff_ok();" } // ECR 5277, ECR 7656
			{ Name ProgrammingEnvironmentDefn }
			{ Label "Source Code Definition" }
			{ MappingName Operation }
			{ TargetFunc "BrowseViaSMDB(${node.id}, 1);" }
		}
		{ Navigation
			{ Name Requirements }
			{ Label "Allocate Requirements" }
			{ MappingName Operation }
			{ Eval "to_requirements_table_from_node(${node.id});" }
		} 
	        { Navigation
                // ECR 5118 begin
                { ParseCondition "use_doors_integration();" }
                //{ ParseCondition "is_doors_available();" }
                // ECR 5118 end
		        { Name DOORS }
		        { Label "DOORS" }
			{ MappingName Operation }
		        { Eval "node_navigate_to_doors(${node.id});" }
		}
        // Begin Add ECR 4179
        { Navigation 
            { ParseCondition "is_sniff3_ok();" }
            { Name SNiFFProgrammingEnvironmentSourceEditorDef }
            { Label "SNiFF Operation Definition" }
            { TargetFunc "SNiFFNavToClassPart(${node.id}, \"edit_symbol\", \"METHOD_DEF\");" }
            { MappingName Operation }
        }
        { Navigation 
            { ParseCondition "is_sniff3_ok();" }
            { Name SNiFFProgrammingEnvironmentSourceEditorImpl }
            { Label "SNiFF Operation Implementation" }
            { TargetFunc "SNiFFNavToClassPart(${node.id}, \"edit_symbol\", \"METHOD_IMPL\");" }
            { MappingName Operation }
        }
        { Navigation 
            { ParseCondition "is_sniff_ok() && !is_sniff3_ok();" }
            { Name SNiFFProgrammingEnvironmentSourceEditorDef }
            { Label "SNiFF Operation" }
            { TargetFunc "SNiFFNavToClassPart(${node.id}, \"edit_symbol\", \"\");" }
            { MappingName Operation }
        }
        { Navigation 
            { ParseCondition "is_sniff3_ok();" } // ECR 7361
            { Name SNiFFProgrammingEnvironmentRetriever }
            { Label "SNiFF Retriever" }
            { TargetFunc "SNiFFNavToClass(${node.id}, \"retrieve\", \"\");" }
            { MappingName Operation }
        } 
        // End Add ECR 4179
	}
}

CellType 200 SignalReceivedName
{
	{ Methods 
		{ Navigation
			{ Name Requirements }
			{ Label "Allocate Requirements" }
			{ MappingName SignalReceivedName }
			{ Eval "to_requirements_table_from_node(${node.id});" }
		} 
	        { Navigation
                // ECR 5118 begin
                { ParseCondition "use_doors_integration();" }
                //{ ParseCondition "is_doors_available();" }
                // ECR 5118 end
		        { Name DOORS }
		        { Label "DOORS" }
			{ MappingName SignalReceivedName }
		        { Eval "node_navigate_to_doors(${node.id});" }
		}
	}
}

CellType 210 SignalSentName
{
	{ Methods 
		{ Navigation
			{ Name Requirements }
			{ Label "Allocate Requirements" }
			{ MappingName SignalSentName }
			{ Eval "to_requirements_table_from_node(${node.id});" }
		} 
	        { Navigation
                // ECR 5118 begin
                { ParseCondition "use_doors_integration();" }
                //{ ParseCondition "is_doors_available();" }
                // ECR 5118 end
		        { Name DOORS }
		        { Label "DOORS" }
			{ MappingName SignalSentName }
		        { Eval "node_navigate_to_doors(${node.id});" }
		}
	}
}


Command CreateActivityDiagramFromClass
{
    { PrintName "Create Activity Diagram?" }
    { ObjectRequired True }
    { StartMessage "Executing Create Activity Diagram..." }
    { FailureMessage "Create Activity Diagram failed." }
    { SuccessMessage "Create Activity Diagram completed." }
	{ Builtin "EditorQrlEvalNoSave NavigateSendQrl(\"uactivityd\",\"UmlStateDiagramInitFromClass(${node.id});\");" }
}

Command CreateStateDiagramFromClass
{
    { PrintName "Create State Diagram?" }
    { ObjectRequired True }
    { StartMessage "Executing Create State Diagram..." }
    { FailureMessage "Create State Diagram failed." }
    { SuccessMessage "Create State Diagram completed." }
	{ Builtin "EditorQrlEvalNoSave NavigateSendQrl(\"ustated\",\"UmlStateDiagramInitFromClass(${node.id});\");" }
}

Command CreateActivityDiagramFromOperation
{
    { PrintName "Create Activity Diagram?" }
    { ObjectRequired True }
    { StartMessage "Executing Create Activity Diagram..." }
    { FailureMessage "Create Activity Diagram failed." }
    { SuccessMessage "Create Activity Diagram completed." }
	{ Builtin "EditorQrlEvalNoSave NavigateSendQrl(\"uactivityd\",\"UmlStateDiagramInitFromOperation(${node.id});\");" }
}

Command CreateStateDiagramFromOperation
{
    { PrintName "Create State Diagram?" }
    { ObjectRequired True }
    { StartMessage "Executing Create State Diagram..." }
    { FailureMessage "Create State Diagram failed." }
    { SuccessMessage "Create State Diagram completed." }
	{ Builtin "EditorQrlEvalNoSave NavigateSendQrl(\"ustated\",\"UmlStateDiagramInitFromOperation(${node.id});\");" }
}


