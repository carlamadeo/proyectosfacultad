//
//      sccsid[] = %W% %Y% %D%
//      StP/UML
//      Confidential property of Aonix
//      Copyright (c) 1997
//      All rights reserved
//

NodeSymbol 999 NoSelectionNavigation
{
    { PrintName "Hook for navigations without selection" }
    { Shape { Predefined Rectangle } }
    { ReadOnly True }
}

NodeSymbol NoSelectionNavigation
{
    { Navigation
	{ Name componentNavigate }
	{ Label "Component Diagram" }
	{ Query "file[UmlComponentDiagram && name = '${file.name}']" }
	{ FailureCmd ComponentNavigation }
    }
}

Command ComponentNavigation
{
    { ObjectRequired False }
    { StartMessage "Component Navigation..." }
    { Builtin "EditorQrlEvalNoSave componentNavigation();" }
}

// ECR 5184 start
// TypeSet RequirementToNodeNodeSymbols
TypeSet RequirementToNodeNodeDeploymentSymbols
// ECR 5184 end
{
    deploymentComponent
    executableComponent
    binaryComponent
    interfaceComponent
    objectComponent
}

// ECR 5184 start
NodeSymbol RequirementToNodeNodeDeploymentSymbols
{
    { Navigation
        { Name RequirementTableFromNode }
        { Label "Allocate Requirements"}
        { FailureCmd NodeGoToRequirementsTable }
    }
    { Navigation
        { ParseCondition "use_doors_integration();" }
        { Name DOORS }
        { Label "DOORS" }
        { FailureCmd GoToDOORSFromNode }
    }
}
// ECR 5184 end

// ECR 5184 start
// TypeSet RequirementToLinkLinkSymbols
TypeSet RequirementToLinkLinkDeploymentSymbols
// ECR 5184 end
{
    deploys
    isComponentOf
    Dependency
    Interface
}

// ECR 5184 start
LinkSymbol RequirementToLinkLinkDeploymentSymbols
{
    { Navigation
        { Name RequirementTableFromLink }
        { Label "Allocate Requirements"}
        { FailureCmd LinkGoToRequirementsTable }
    }
    { Navigation
        // ECR 5118 begin
        { ParseCondition "use_doors_integration();" }
        //{ ParseCondition "is_doors_available();" }
        // ECR 5118 end
        { Name DOORS }
        { Label "DOORS" }
        { FailureCmd GoToDOORSFromLink }
    }
}
// ECR 5184 end

TypeSet DOORS
{
    deploymentComponent
    executableComponent
    binaryComponent
    interfaceComponent
    objectComponent
    deploys
    isComponentOf
    Dependency
    Interface
}

Include "rules/syms_to_rqtbl.rules.common"

// Menu Navigation
// {
//     { InMenuBar True }
//     { Label "&Navigation" }
//     { Pin True }
//     { GenerationFunc idehook_navigation_menu_gen_func } 
// }

Menu ProductMenu
{
    { InMenuBar True }
    { Label "&UML" }
    { Pin True }
    { MenuEntry
	{ Name deployAComponentDiagram }
	{ Label "&Deploy Component Diagram" }
	{ Builtin "EditorQrlEvalNoSave deployAComponentDiagramFromDeploymentEditor();" }
    }

// Begin ECR947, ECR 4494
    { MenuEntry
	{ Name ConnectNoteToLink }
	{ Label "Connect Note To Link" }
	{ Builtin "EditorQrlEval ConnectNoteToLink();" }
//    	{ Accelerator
//             { Value "Ctrl<Key>n" }
//	}
	{ ActiveFunc idehook_note_link_active_func }
    }
// End ECR947, ECR 4494
}

Menu MenuBarEdit
{
    { MenuEntry
        { Name ObjectProperties }
        { Show True }
        { Builtin "EditorQrlEvalNoSave UmlPopUpPropSheet(\"udeploymentd\");" }
        { ActiveFunc UmlDeploymentObjectPropsActive }
    }
}

Menu ObjectContextMenu
{
    { MenuEntry
        { Name ObjectProperties }
        { Show True }
        { Builtin "EditorQrlEvalNoSave UmlPopUpPropSheet(\"udeploymentd\");" }
        { ActiveFunc UmlDeploymentObjectPropsActive }
    }
}

Command CheckSemantics
{
  { PrintName "Check Semantics" }
  { StartMessage "Check Diagram Semantics" }
  // ECR 7464
  // { Builtin "EditorQrlEval uml_diag_check_semantics(\"udeploymentd_check_semantics\");" }
  { Builtin "EditorQrlEvalNoSave uml_diag_check_semantics(\"udeploymentd_check_semantics\");" }
}
