
//      StP/UML
//      Confidential property of Aonix
//      Copyright (c) 1997
//      All rights reserved


Include "rules/stereotype_dm.rules.common"
Include "rules/uml.feature"
Include "rules/state_diag_syms.rules.common"
Include "rules/note_vertex_syms.rules.common"
Include "rules/object_sym.rules.common"
Include "rules/swimlane_sym.rules.common" // ECR 3159
Include "rules/syms_to_rqtbl.rules.common"
Include "rules/uactivityd.prop"
Include "rules/state_diag.prop.common" // ECR 6596
Include "rules/uactivityd_toolbar_acr_types.rules" // ECR 3556
Include "rules/object_instance_rename.prop" //ECR 6433

TypeSet AllNoteableNodeTypes
{
	State
	InitialState
	FinalState
	StateMachine
	Decision
	SplitControl
	MergeControl
	Object
	Swimlane // ECR 3159
// ECR947, ECR 4494
	CommentAnchor
// End ECR947, ECR 4494
}

DiagramType
{
    { SyntaxCheckFunc UActivityDCheckSyntax }
}

NodeSymbol 1 State
{
	{ PrintName "Action State" }
	{ NodeMapping
		{ AppType UmlActionState }
		{ NameFunc uml_state_name_func }
		{ Scope { SymbolFunc uml_state_machine_symbol } }
		{ NameIsRequired True }
	}
    // JED - added for UML 1.1
    { DisplayMark
        { Name DeferredEvents }
        // JED - different condition needed due to mapping difference
        { Condition "link_ref[link[UmlDeferredEventLink && from_node[UmlState && name='${node.name}' && scope_node_id=0${node.scope_node_id}]]];" }
        { Anchor LowerCenter }
        { VAdjust Bottom }
        { HAdjust Center }
        { YPixelOffset 15 }
        { StringMarkFunc "uml_action_state_deferred_events_dmark(0${node.id});"}
        { Help "Deferred events for the state." }
    }
    // Begin Add ECR 6285
	{ DisplayMark
		{ Name StateConstraints }
		{ ItemCond (UmlConstraintItem) }
		{ Anchor LowerCenter }
		{ HAdjust Center }
		{ VAdjust Top }
		{ Help "State constraints" }
		{ StringMarkFunc "uml_dpymark_list_formatter(gde_dmark_matched_items,\"{\",\"}\",\",\");" }
	}
	{ DisplayMark
		{ Name StateTaggedValues }
		{ ItemCond (UmlTaggedValue) }
        { Anchor CenterRight }
		{ HAdjust Left }
		{ VAdjust Center }
        { XPixelOffset 5 }
		{ Help "State tagged values" }
		{ StringMarkFunc "uml_dpymark_list_formatter(gde_dmark_matched_items,\"{\",\"}\",\", \");" }
    }
    // End Add ECR 6285    
    // Begin Add ECR 3829
    { RenameFunc uml_actionState_rename }
    { DisplayMark
    	{ Name ActivityIsRefined }
    	// { Condition "node_ref[file_id != ${file.id} && node[UmlStateMachine && name='${node.name}'] && file[UmlActivityDiagram]]" }
        // ${file_id} isn't subsituted here :-(((
    	{ CondFunc "action_state_is_refined(\"${node.id}\");" } // removed node.name for ECR 5421
        { Anchor LowerRight }
        { XPixelOffset -30 }
        { YPixelOffset -5 }
		{ BitmapMark0 "substate0" }
		{ BitmapMark1 "substate1" }
		{ BitmapMark2 "substate2" }
    	{ Help "Activity is refined in another ActivityDiagram" }
    }
    // Begin Add ECR 6389
    { DisplayMark
        { Name StDescription }
        { CondFunc "symbol_has_description(0${node.id});" }
        { Anchor LowerRight }
        { VAdjust Bottom }
        { HAdjust Center }
        { YPixelOffset 15 }
        { BitmapMark0 "descln0" }
        { BitmapMark1 "descln1" }
        { BitmapMark2 "descln2" }
        { Help "State has description." }
    }
    // End Add ECR 6389
    { Navigation
    	{ Name CreateOrFindRefinedActionStateDiagram }
        { Label "Diagram with Refined Action State" }
	    // { Query "node_ref[file_id != ${file.id} && node[UmlStateMachine && name='${node.name}'] && file[UmlActivityDiagram]]" }
	    { TargetFunc "find_refined_action_state(\"${node.id}\",\"${file.id}\");" } // changed to node.id for ECR 5421
 	    { FailureCmd FindOrCreateRefinedActionState_in_ActivityDiag }
    }
    // End Add ECR 3829    
}

NodeSymbol 2 InitialState
{
	{ NodeMapping
		{ AppType UmlInitialState }
		{ NameFunc uml_gde_node_name_func }  
		{ Scope { SymbolFunc uml_state_machine_symbol } }
		{ NameIsRequired False }
	}
}

NodeSymbol 3 FinalState
{
	// Begin Add for ECR3815
	{ LabelAnchor South }
	{ HAdjust     Center }
	{ VAdjust	Top }
	// End Add for ECR3815
	{ NodeMapping
		{ AppType UmlFinalState }
		{ NameFunc uml_gde_node_name_func }
		{ Scope { SymbolFunc uml_state_machine_symbol } }
		{ NameIsRequired False }
    }
}

NodeSymbol 5 StateMachine
{
    { NodeMapping
        { AppType UmlStateMachine }
        { NameFunc uml_state_machine_name_func }
        { NameIsRequired True }
    }
    // Begin Add ECR 3829
    { DisplayMark
        { Name StateMachineContext }
        { CondFunc "stateMachineHasContext(\"${node.name}\");" }
        { StringMarkFunc "stateMachineContextDM(\"${node.name}\");" }
        { Anchor UpperLeft }
        { HAdjust Left }
        { VAdjust Top }
        { XPixelOffset 0 }
        { YPixelOffset -20 }
        { Help "Context of the state machine" }
    }
    { Navigation
        { Name ParentActivity }
        { Label "Parent Action State" }
        // { Query "node_ref[file_id != ${file.id} && node[UmlActionState && name='${node.name}']]"  }
        { TargetFunc "find_parent_action_state(\"${file.id}\",\"${node.name}\");" }
    }
    // End Add ECR 3829
}


NodeSymbol 6 Decision
{
	{ PrintName "Decision" }
	{ Shape
		{ Predefined Diamond }
		{ ToolbarImage "decision" }
	}
	{ CanHaveLabel False }
	{ CanBeRenamed False }
	{ DefaultSize 1.0 0.5 }
	// ECR 5772, changing cardinality
	{ Cardinality { Min 1 } { OutLinks StateTransitionLink }}
	{ Cardinality { Min 1 } { InLinks DecisionIncomingLinks }}
	// ECR 5772
	{ NodeMapping
		{ AppType UmlActionState }
		{ NameFunc uml_decision_name }
		{ InverseMapFunc gde_no_op_inverse_node_map_func }
		{ Scope { SymbolFunc uml_state_machine_symbol } }
    }
	{ NoteMapping 
		{ AppType UmlExtensibilityDefinition }}
	{ ItemMapping 
		{ AppType UmlStereotype }
		{ NoteAppType UmlExtensibilityDefinition }
		{ ValueString "Decision" }
		{ InverseMapFunc gde_no_op_inverse_item_map_func }
	}
}

NodeSymbol 7 SplitControl
{
  	// ECR 6638, relocated symbols props into
  	// state_diag_syms.rules.common
	{ NodeMapping
		{ AppType UmlSplitControl }
		{ NameFunc uml_split_control_name }
		// ECR 7223
		// { SigFunc uml_split_control_signature }
		{ Scope { SymbolFunc uml_state_machine_symbol } }
		{ InverseMapFunc gde_no_op_inverse_node_map_func }
		{ NameIsRequired True } 
	}
}

NodeSymbol 8 MergeControl
{
  	// ECR 6638, relocated symbols props into
  	// state_diag_syms.rules.common
	{ NodeMapping
		{ AppType UmlMergeControl }
		{ NameFunc uml_merge_control_name }
		// ECR 7223
		// { SigFunc uml_merge_control_signature }
		{ Scope { SymbolFunc uml_state_machine_symbol } }
		{ InverseMapFunc gde_no_op_inverse_node_map_func }
		{ NameIsRequired True } 
	}
}

// ECR 3159 start
NodeSymbol 1011 Swimlane {}
LinkSymbol 1012 SwimLaneContains {}

// ECR 3159 end

NodeSymbol 9 Object
{
    { Navigation
        { Name RequirementTableFromNode }
        { UseMappings ( ObjectMapping ) }
    }
    { Navigation
        // ECR 5118 begin
        { ParseCondition "use_doors_integration();" }
        // ECR 5118 end
        { Name DOORS }
        { UseMappings ( ObjectMapping ) }
    }
}

NodeSymbol 21 Vertex
{
    { ReplaceSet ( None ) }
    { Cardinality { Max 1 } { InLinks  SplitControlLink } }
    { Cardinality { Max 1 } { InLinks  InputLink } }
    { Cardinality { Max 1 } { InLinks  OutputLink } }
    { Cardinality { Max 1 } { InLinks  MergeControlLink } }
    { Cardinality { Max 1 } { OutLinks StateTransitionLink } }
    { Cardinality { Max 1 } { OutLinks MergeControlLink } }
}

NodeSymbol 22 Note
{}

// ECR947, ECR 4494
// Added CommentAnchor
CntxSymbol CommentAnchor
{
    { ParentLink StereotypeableLinkSet }
}
// End ECR947, ECR 4494

// JED - Added for UML 1.1
// Activity editors need symbols to show the sending and receiving of
// signals. This is especially needed to show deferred events.

NodeSymbol 40 SignalSend
{
    { Shape
        { Draw
			{ Polygon
				{ Origin  0.0   0.0 } 
				{ Point  -20.0 -25.0 } // upper left
				{ Point   20.0 -25.0 } // top of point
                { Point   25.0   0.0 } // point
				{ Point   20.0  25.0 } // bottom of point
                { Point  -20.0  25.0 } // lower left
				{ Point  -20.0 -25.0 } // back to upper left
                { FillStyle White    } // so it overlays out the link
			}
        }
    }
    { AutoScaleLarger True }
    { DefaultSize 1.0 0.5 }
}

NodeSymbol 41 SignalReceive
{
    { Shape
        { Draw
			{ Polygon
				{ Origin  0.0   0.0 } 
				{ Point  -20.0 -25.0 } // upper left
				{ Point   25.0 -25.0 } // top of point
                { Point   20.0   0.0 } // point
				{ Point   25.0  25.0 } // bottom of point
                { Point  -20.0  25.0 } // lower left
				{ Point  -20.0 -25.0 } // back to upper left
                { FillStyle White    } // so it overlays out the link
			}
        }
    }
    { AutoScaleLarger True }
    { DefaultSize 1.0 0.5 }
}


LinkSymbol 50 StateTransitionLink
{
	{ SymbolicDependentsFunc transition_symbolic_dependents }
	{ Connects { From StatesWithOutgoingTransitions } { To StatesWithIncomingTransitions } { IsDefault True } }
	{ Connects { From StatesWithOutgoingTransitions } { To ControlStates } { IsDefault True } }
	{ LinkMapping 
		{ MappingName Transition }
		{ AppType UmlTransition }
		{ NameFunc uml_transition_name }
		{ Scope { SymbolFunc uml_state_machine_symbol } }
		{ InverseMapFunc uml_transition_inverse_map_func }
	}
	{ NoteMapping 
		{ AppType UmlTransitionDefinition }
		{ Owner { MappingName Transition } } }
	{ ItemMapping 
		{ MappingName TransitionGuard }
		{ AppType UmlTransitionGuard }
		{ NoteAppType UmlTransitionDefinition }
		{ ValueFunc uml_transition_guard }
		{ InverseMapFunc gde_no_op_inverse_item_map_func }
	}
	{ ItemMapping 
		{ MappingName TransitionAction }
		{ AppType UmlTransitionAction }
		{ NoteAppType UmlTransitionDefinition }
		{ ValueFunc uml_transition_action }
		{ InverseMapFunc gde_no_op_inverse_item_map_func }
	}
	{ NameCompletion { MappingName Transition} }
  
}

LinkSymbol 54 SplitControlLink
{
	{ CanHaveLabel True }
	{ Connects
		{ From SplitControl } { To StatesWithIncomingTransitions }
		{ IsDefault True }
	}
	{ LinkMapping
		{ AppType UmlTransition } 
		{ Scope { SymbolFunc uml_state_machine_symbol } }
	}
}


LinkSymbol 55 MergeControlLink
{
	{ CanHaveLabel True }
	{ Connects
		{ From MergeControl } { To StatesWithIncomingTransitions }
		{ IsDefault True }
	}
	{ LinkMapping 
		{ AppType UmlTransition } 
		{ Scope { SymbolFunc uml_state_machine_symbol } }
	}
}

LinkSymbol 56 OutputLink
{
	{ PrintName "Output Link" }
	{ CanHaveLabel False }
	{ Dashed True }
	{ ToOpenArrow True } // ECR 4861	
	{ Uncentered True }
	{ Connects
		{ From State } { To Object }
		{ IsDefault True }
	}
	{ LinkMapping 
		{ AppType UmlOutput } 
		{ ToNode { MappingName ObjectMapping }}
		{ Scope { SymbolFunc uml_state_machine_symbol } }
	}
}

LinkSymbol 57 InputLink
{
	{ PrintName "Input Link" }
	{ CanHaveLabel False }
	{ Dashed True }
	{ ToOpenArrow True } // ECR 4861	
	{ Uncentered True }
	{ Connects
		{ From Object } { To State }
		{ IsDefault True }
	}
	{ LinkMapping 
		{ AppType UmlInput } 
		{ FromNode { MappingName ObjectMapping }}
		{ Scope { SymbolFunc uml_state_machine_symbol } }
	}
}

TypeSet DecisionIncomingLinks
{
    StateTransitionLink
    SplitControlLink
    MergeControlLink
}

TypeSet StatesWithIncomingTransitions
{
    State
    FinalState   
    Decision
    // ECR 7462 start
    SplitControl
    MergeControl
    // ECR 7462 end
}

TypeSet StatesWithOutgoingTransitions
{
    InitialState
    State
    Decision
}

NodeSymbol StatesWithOutgoingTransitions
{
    { SymbolicDependentsFunc state_symbolic_dependents }
}

SymbolList
{
    { ShowStraightArc True }
    { ShowSpline True }
    { OrthogonalArcsAreAllowed True }
    { OrthogonalArcsAreDefault False }
    { Symbols
	(
	    Note
            SEPARATOR
	    StateMachine
            SEPARATOR
	    Swimlane // ECR 3159
	    State
	    Object
	    Decision
	    SplitControl // ECR 6638
	    MergeControl // ECR 6638
            SEPARATOR
	    InitialState
	    FinalState
	)
    }
}

Include "rules/gde_menu_bar.std"
Include "rules/gde_accels.std"
Include "rules/gde_edit_menu.std"
//Include "rules/oo_object_rename.rules"

Include "rules/default_arc_type.rules" //ECR 6469


// Menu Navigation
// {
//     { InMenuBar True }
//     { Label "&Navigation" }
//     { Pin True }
//     { GenerationFunc idehook_navigation_menu_gen_func }
// }

Menu ProductMenu //UMLMenu
{
    //{ InMenuBar True }
    { Label "&UML" }
    { Pin True }

    { MenuEntry
		{ Name SplitControl }
		{ Label "Split Tranisition (fork)" } // ECR 6638
		{ Builtin "EditorQrlEval UActivityDCreateControlSplit();" }
		{ ActiveFunc idehook_split_control_active_func }
    }
    { MenuEntry
		{ Name MergeControl }
		{ Label "Synchronize Transitions (merge)" } // ECR 6638
		{ Builtin "EditorQrlEval UActivityDMergeControl();" }
		{ ActiveFunc idehook_merge_control_active_func }
    }
// Begin ECR947, ECR 4494
    { MenuEntry
		{ Name ConnectNoteToLink }
		{ Label "Connect Note To Link" }
		{ Builtin "EditorQrlEval ConnectNoteToLink();" }
	//    	{ Accelerator
	//             { Value "Ctrl<Key>n" }
	//	}
		{ ActiveFunc idehook_note_link_active_func }
    }
// End ECR947, ECR 4494
}

Menu MenuBarEdit
{
    { MenuEntry
        { Name ObjectProperties }
        { Show True }
        { Builtin "EditorQrlEvalNoSave UmlPopUpPropSheet(\"uactivityd\");" }
        { ActiveFunc UmlActivityObjectPropsActive }
    }
}

Menu ObjectContextMenu
{
    { MenuEntry
        { Name ObjectProperties }
        { Show True }
        { Builtin "EditorQrlEvalNoSave UmlPopUpPropSheet(\"uactivityd\");" }
        { ActiveFunc UmlActivityObjectPropsActive }
    }
    }
// Begin Add ECR 3829
Command FindOrCreateRefinedActionState_in_ActivityDiag
{
    { PrintName "Create Activity Diagram for refined Action State ?" }
    { Builtin "EditorQrlEvalNoSave NavigateSendQrl(\"uactivityd\",\"UmlStateDiagramInitFromActionState(${node.id});\");" }
    { StartMessage "Find/Create Refined Action State ..." }
    { SuccessMessage "Find/Create Refined Action State completed." }
    { FailureMessage "Find/Create Refined Action State failed." }
    { ObjectRequired True }
}
// End Add ECR 3829
Command CheckSemantics
{
  { PrintName "Check Semantics" }
  { StartMessage "Check Diagram Semantics" }
  // ECR 7464
  // { Builtin "EditorQrlEval uml_diag_check_semantics(\"uactivityd_check_semantics\");" }
  { Builtin "EditorQrlEvalNoSave uml_diag_check_semantics(\"uactivityd_check_semantics\");" }
}


TypeSet RequirementToNodeNodeSymbols
{
    State
    InitialState
    FinalState
    StateMachine
    SplitControl
    MergeControl
    Object
    Decision
}

TypeSet RequirementToLinkLinkSymbols
{
    StateTransitionLink
    SplitControlLink
    MergeControlLink
    InputLink
    OutputLink
}

TypeSet DOORS
{
    State
    InitialState
    FinalState
    StateMachine
    SplitControl
    MergeControl
    Object
    Decision
    StateTransitionLink
    SplitControlLink
    MergeControlLink
    InputLink
    OutputLink
}


TypeSet StereotypeableOnSymbolNodeSet
{
    StateMachine
    SplitControl
    MergeControl
    // --- START PATCH ECR 6726
    // Object
    // --- END PATCH ECR 6726
    State // ECR 6285
}

TypeSet StereotypeableInLabelNodeSet
{
    InitialState
    FinalState
}

NodeSymbol StereotypeableNodeSet
{
    { Methods
        { Method
            { Name DoubleClick }
            { MethodFunc UmlActivity_ps_double_click }
        }
    }
}

TypeSet StereotypeableLinkSet 
{
    StateTransitionLink
    SplitControlLink
    MergeControlLink
    InputLink
    OutputLink
}

// SPR 4052 - Model Management
// used for Model Management to have one common display mark
TypeSet AllLockableNodeTypes
{
    State
    InitialState
    FinalState
    StateMachine
    SplitControl
    MergeControl
    Object
    Decision
}

LinkSymbol StereotypeableLinkSet
{
    { Methods
        { Method
            { Name DoubleClick }
            { MethodFunc UmlActivityLink_ps_double_click }
        }
    }
}

DisplayMarkGroups
{
    { ContinuousDisplayMarks (
			Stereotype
			StereotypeLink
			// ECR 3829
			ActivityIsRefined
			StateMachineContext
			    )
    }
    // Begin Add ECR 6389
	{ Group
	    { Name Description }
	    { DisplayMarks (StDescription ODescription SmDescription) }
	}
	{ OnDemandDisplayMarks (Description) }
	// End Add ECR 6389
}

// Begin Add ECR3785
// TypeSet for all kind of uml node symbols
TypeSet NavigationNodeTypes
{
	State
	InitialState
	FinalState
	StateMachine
	Object
}

Include "uml/rules/uml_navigation.rules"
// End Add ECR3785
// Begin Add ECR 3829
PropertySheet ActionStateRename
{	
    { Name ActionStateRename }
    { Label "Rename ActionState"}
    { OwnerActionCallback uml_actionState_rename_action_done }
    { Properties
	{ Button
	    { Name "OK" }
	    { Label "Rename" }
	    { Event
		{ Type Select }
		{ Callback "gde_object_rename_callback" }
	    }
	}
	{ Button
	    { Name "Apply" }
	    { Label "Check Impact" }
	    { Event
		{ Type Select }
		{ Callback "gde_rename_check_impact_callback" }
	    }
	}
	{ Button
	    { Name "Cancel" }
	    { Label "Cancel" }
	    { Event
		{ Type Select }
		{ Callback "gde_rename_cancel_callback" }
	    }
	}
	{ Message
	    { Name "NewLabelLabel" }
	    { Label "New Label:"}
      	}
	{ Text
	    { Name "NewLabel"}
	    { MinLength	1}
	    { DispLength	80}
	    { MaxLength	5000}
	    { DispRows      5}
	    { MaxRows       5000}
	    { VertScrollbar 1}
	}
	{ Footer
	    { Name "Status" }
	    { LeftFooter "" }
	    { Active True }
	}
	{ Group
	    { Name "Top" }
	    { Type Vertical }
	    { Members (NewLabelLabel NewLabel)}
	    { VerticalAlign Left}
	}
	{ Group
	    { Name "All" }
	    { Type Vertical }
	    { Members (Top Buttons)}
	    { VerticalAlign Center}
	}
    }
}
// End Add ECR 3829

// ECR 4052 Model Management
Include "rules/model_management.common"

IncludeIfExists "user/uml/rules/user_uactivityd.rules"
		 
PassWord "5084AE0E"
