external string UseCases;
external string TDDataBase;
external string TDUserName;
external string TDPassword;
external string TDServer;
external string TDDirectory;

#include "qrl/tsdl_extract.inc"
#include "qrl/basic_textract_dt.inc"
#include "qrl/include/error.inc"

#include "val/qrl/include/TConfig.inc"
#include "val/qrl/include/TUseCase.inc"


#include "thirdpartytools/qrl/include/GenerateData.inc"
#include "thirdpartytools/mercury/qrl/include/GenerateOneTestDirectorAPI.inc"
#include "thirdpartytools/mercury/qrl/include/TestDirectorAPI_functions.inc"

  boolean DEBUG=False;

  list ScenarioList;
  list testcaselist;

  string TDFILE;

  string PARAMETER;

  string OUTPUTPATH = current_projdir() + current_system() + "/test_files/";
  string OUTPUTDIR;
  string OUTPUTFILE;
  string OUTPUTTEXT="";

  string ORACLESDIR = OUTPUTPATH + "ORACLES/";


  string use_case_name, test_unit_id;

  string SCRIPTPATH;

void 
main ()
{ 

  list UseCaseList;
  int count, i;

  UseCaseList = string_to_list (UseCases, " ");

  count = list_count (UseCaseList);

  for (i=0;i<count;i++)
    {

      use_case_name = list_get(UseCaseList,i);

      if (!CheckExistance (use_case_name) )
        {
          print_error ("Use Case: " + use_case_name + " is not in the selected model");
          continue;
        }

      test_unit_id = Get_T_test_unit_id(use_case_name, "");

      SCRIPTPATH = TDDirectory + "/" + TDDataBase + "/Tests/" + test_unit_id;
      MakeDir (SCRIPTPATH);
 
      GenerateTestPlan();
    }

}
