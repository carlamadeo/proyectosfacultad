//
// 	sccsid[] = %W% %Y% %D%
// 	StP/Core
// 	Confidential property of Interactive Development Environments, Inc.
// 	Copyright (c) 1992-1993
// 	All rights reserved
//

void
gde_toggle_clone_mode()
{
    if (gde_clone_mode() == "Implicit")
	gde_set_clone_mode("Dorment");
    else
	gde_set_clone_mode("Implicit");
}

int explicit_clone_dodefer;

void
gde_start_explicit_clone()
{
    explicit_clone_dodefer = gde_start_edit_transaction();

    editor_string_selector("",
			  "gde_explicit_clone_cb();",
			  "Clone",
			  "New Name:",
			  "Clone",
			  "Cancel");
}

void
gde_explicit_clone_cb()
{
    string new_name;
    gde_symbol sym;
            
    if (editor_string_selector_action() == "Cancel")
    {
	gde_end_edit_transaction(GDE_CMD_INSERT, explicit_clone_dodefer, False);
	return;
    }

    new_name = editor_string_selector_value();
    sym = list_get(gde_selected_symbols(), 0);

    gde_set_clone_mode("Explicit");

    if (gde_symbol_is_node(sym))
	gde_node_set_label(to_gde_node(sym), new_name);
    else if (gde_symbol_is_arc(sym))
	gde_arc_set_label(to_gde_arc(sym), new_name);
    else if (gde_symbol_is_cntx(sym))
	gde_cntx_set_label(to_gde_cntx(sym), new_name);

    gde_end_edit_transaction(GDE_CMD_INSERT, explicit_clone_dodefer, False);
}

string
gde_clone_mode_label_func()
{
    if (gde_clone_mode() == "Implicit")
	return "Make Cloning Explicit";
    else
	return "Make Cloning Implicit";
}

int
gde_explicit_clone_active_func()
{
    if (gde_clone_mode() == "Implicit")
	return 0;
    else
	return 1;
}
