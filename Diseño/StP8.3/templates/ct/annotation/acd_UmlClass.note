
// 	StP/UML
// 	Confidential property of Aonix
// 	Copyright (c) 1997
// 	All rights reserved
//  FILE: user_UmlClass.note


Note 801921
{
    { AppType UmlClassIDLDeclarations }
    { HelpText "The IDL Declarations note description is intended to let you add declarations (ones which are not normally represented by a modeling construct, e.g., a local typedef) to the code generated for an IDL class definition.  This note is prepended, as is, to the code generated for an IDL class definition." }
    { PrintName "IDL Declarations" }
    { Bounds { Min 0 } { Max 1 } }

    { Item
        { AppType UmlClassIsQueryable }
        { HelpText "Defines whether the specified interface is queryable." } 
        { PrintName "Is Queryable" }
        { Bounds { Min 0 } { Max 1 } }
        { InitValue "True" }
    }

    { Item
        { AppType UmlClassCreateImplementation }
        { HelpText "Defines whether a business object implementation, and its accompanying data object interface, will be created for the current interface. The data object interface will include any attributes that have the DDL property  IsIncludedInDataObject set to true. By default, all public attributes of the class are included in the data object interface." } 
        { PrintName "Create Implementation" }
        { Bounds { Min 0 } { Max 1 } }
        { InitValue "True" }
    }

    { Item
        { AppType UmlClassCreateKey }
        { HelpText "Defines whether a key will be created for the current interface. The key will include any attributes that have the PrimaryKey property set to True. By default, no attributes are included in the key. When you set the CreateKey property to true, you should also set the PrimaryKey property to true for at least one of the interface's public attributes." } 
        { PrintName "Create Key" }
        { Bounds { Min 0 } { Max 1 } }
        { InitValue "True" }
    }

    { Item
        { AppType UmlClassCreateCopyHelper }
        { HelpText "Defines whether a copy helper will be created for the current interface. The copy helper will include any attributes that have the IsIncludedInCopyHelper property set to true. By default, all public attributes of the class are included in the copy helper." } 
        { PrintName "Create CopyHelper" }
        { Bounds { Min 0 } { Max 1 } }
        { InitValue "True" }
    }

    { Item
        { AppType UmlClassBridgeToOB }
        { HelpText "Set to False to hide the class from the export process. The interface, and its attendant component objects, will not be exported to Object Builder. By default, the BridgeToOB property is set to True, and the class is exported." } 
        { PrintName "Bridge to Object Builder" }
        { Bounds { Min 0 } { Max 1 } }
        { InitValue "True" }
    }

    { Item
        { AppType UmlClassImplementationType }
        { HelpText "Determines the type of the union switch. Should be a valid type: either a predefined IDL type (for example, char, short, float), a type currently defined in StP, or a type already defined in the Object Builder model you are exporting to. When you specify the type, any leading and trailing blank spaces are removed, and embedded spaces are converted to underscores." } 
        { PrintName "Implementation Type" }
        { Bounds { Min 0 } { Max 1 } }
    }

    { Item
        { AppType UmlClassConstValue }
        { HelpText "Determines the value of the const." } 
        { PrintName "Constant Value" }
        { Bounds { Min 0 } { Max 1 } }
    }

}

Note 801924
{
    { AppType UmlClassDefinition }
    { HelpText "The Class Definition note lets you add items that capture modeling information about a particular class." }
    { PrintName "Class Definition" }
    { Bounds { Min 0 } { Max 1 } }

    { Item
        { AppType UmlClassType }
        { HelpText "The Class Type lets you indicate the type of this analysis class.  It has three values, Domain, Application and TypeDef, and an associated display mark, ClassType, that will be shown on the NorthWest corner of the class box. If the ClassType is TypeDef, and a TypeDef item is added for the C++, IDL or Java Declaration note, the code generation will automaticaly generate a typedef statement instead of the class declaration. If the TypeDef class has attributes, it will be generated as a Data Structure." } 
        { PrintName "Uml Class Type" }
        { Bounds { Min 0 } { Max 1 } }
        { InitValue "Interface" }
    }
}
