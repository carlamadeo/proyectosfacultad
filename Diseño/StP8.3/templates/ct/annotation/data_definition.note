//	DSE DataDefinition.note
//	for DSE selections, sequences and enumerations

Note 802006
{
    { AppType DataDefinition }
    { Bounds { Min 1 } { Max 1 } }
    { PrintName "Data Definition" }
    { Item
        { AppType DataType }
	{ HelpText "Use the Type note to specify the data type of a data element.  Do not use it with a structure.  When building testable models for T, leaf definitions should be a T primitive type (`integer', `real', `boolean', `string', `character', or `unspecified')." }
	{ Bounds { Min 0 } { Max 1 } }
	{ PrintName "Type" }
    }
    { Item
	{ AppType SystemType }
	{ PrintName "System Type" }
	{ Bounds { Min 0 } { Max 1 } }
	{ HelpText "The SystemType item accepts values of either 'True' or 'False'. If set to 'True' the data item is taken to be a system type, thus semantic checks and code generation will handle it appropriately." }
	{ InitValue "True" }
    }
    { Item
        { AppType Tag }
        { Bounds { Min 0 } { Max 1 } }
        { PrintName "Tag" }
        { HelpText "Use the Tag item to enter the tag value for this part of a structure.  Tag values are used for generating tag names for nested sequences, selections and enumerations." }
    }
    { Item
        { AppType CodeGenId }
        { PrintName "Code Generation ID" }
        { HelpText "Contains the unique ID for code generated object."}
        { Bounds { Min 0 } { Max 1 } }
        { IsVisible False }
    }
    { Item
        { AppType Constraint }
	{ Bounds { Min 0 } { Max 1 } }
	{ PrintName "Constraint" }
	{ HelpText "The Constraint item allows you to specify a value range for this object." }
    }
    { Item
        { AppType  AllowedValue }
	{ PrintName "Allowed Value" }
	{ HelpText "The Allowed Value item allows you to specify an initial value for this object." }
    }
    { Item
        { AppType Alias }
	{ HelpText "The Alias item allows you to specify alternate names for this object." }
	{ Bounds { Min 0 } }
	{ PrintName "Alias" }
    }
    { Item
        { AppType KeyElements }
	{ HelpText "The Key Elements item allows you to specify which data elements in this structure are keys for it." }
	{ Bounds { Min 0 } }
	{ PrintName "Key Elements" }
    }
    { Item
        { AppType IsKey }
	{ HelpText "The Is Key item allows you to specify whether this object is a key element for its parent data structure." }
	{ Bounds { Min 0 } { Max 1 } }
	{ PrintName "Is Key?" }
    }
    { Item
        { AppType Extern }
	{ HelpText "The Extern item lets you specify the name of the diagram on which this object is defined." } 
	{ Bounds { Min 0 } { Max 1 } }
	{ PrintName "Extern" }
    }
    { Item
        { AppType ArraySize }
        { Bounds { Min 0 } { Max 1 } }
        { PrintName "Array Size" }
        { HelpText "The size of the array, specified as size, [size] or [size1][size2], etc." }
    }

    // 2167A Annotations
    { Item
        { AppType IsMessage  }
        { Bounds { Min 0 } { Max 1 } }
	{ PrintName "IsMessage?" } 
	{ InitValue "True" }
    }
    { Item
        { AppType DataLocation  }
        { Bounds { Min 0 } { Max 1 } }
	{ PrintName "Location" } 
	{ InitValue "N/A" }
    }
    { Item
        { AppType DataSize  }
        { Bounds { Min 0 } { Max 1 } }
	{ PrintName "Size" }
	{ InitValue "N/A" }
    }
    { Item
        { AppType Representation  }
        { Bounds { Min 0 } { Max 1 } }
	{ InitValue "N/A" }
	{ PrintName "Representation " }
    }
    { Item
        { AppType Legality  }
        { Bounds { Min 0 } { Max 1 } }
	{ InitValue "N/A" }
	{ PrintName "Legality " }
    }
    { Item
        { AppType Units  }
        { Bounds { Min 0 } { Max 1 } }
	{ InitValue "N/A" }
	{ PrintName "Units " }
    }
    { Item
        { AppType Scaling  }
        { Bounds { Min 0 } { Max 1 } }
	{ InitValue "N/A" }
	{ PrintName "Scaling " }
    }
    { Item
        { AppType Precision  }
        { Bounds { Min 0 } { Max 1 } }
	{ InitValue "N/A" }
	{ PrintName "Precision " }
    }
    { Item
        { AppType Accuracy  }
        { Bounds { Min 0 } { Max 1 } }
	{ InitValue "N/A" }
	{ PrintName "Accuracy " }
    }
    { Item
        { AppType Conventions  }
        { Bounds { Min 0 } { Max 1 } }
	{ InitValue "N/A" }
	{ PrintName "Conventions " }
    }
    { Item
        { AppType Frequency  }
        { Bounds { Min 0 } { Max 1 } }
	{ InitValue "N/A" }
	{ PrintName "Frequency " }
    }
    { Item
        { AppType Priority  }
        { Bounds { Min 0 } { Max 1 } }
	{ InitValue "N/A" }
	{ PrintName "Priority " }
    }

    // T annotations
    { Item
	{ AppType TFalseValue }
	{ HelpText "Specify the literal value for False used for all the DataItems of this type.  The default is `FALSE'." }
	{ Bounds { Min 0 }  { Max 1 } }
	{ PrintName "False Value" }
	{ InitValue "FALSE" }
    }
    { Item
	{ AppType TTrueValue }
	{ HelpText "Specify the literal value for True used for all the DataItems of this type.  The default is `TRUE'. Only used for DataType Class `boolean'." }
	{ Bounds { Min 0 } { Max 1 } }
	{ PrintName "True Value" }
	{ InitValue "TRUE" }
    }
    { Item
	{ AppType TUnknownValue }
	{ HelpText "Specify the literal value for unknown boolean values used for all the DataItems of this type.  The default is `UNKNOWN'. Only used for DataType Class `boolean'." }
	{ Bounds { Min 0 } { Max 1 } }
	{ PrintName "Unknown Value" }
	{ InitValue "UNKNOWN" }
    }
    { Item
	{ AppType TTestUnits }
	{ HelpText "Specify the units for this type.  This is useful for real types, if it is desired to have StP/T be able to compare different types." }
	{ Bounds { Min 0 } { Max 1 } }
	{ PrintName "Test Units" }
    }
    { Item
	{ AppType TInvalidSubdomain}
	{ HelpText "Specify the invalid subdomain StP/T should use when testing DataItems of this type. These are the values out of the range specified, or out of the basic DataType Class specified.  Specify `Abnormal' for maximal invalid subdomain checking, and specify `None' (the default) for no invalid subdomain checking." }
	{ Bounds { Min 0 } { Max 1 } }
	{ PrintName "Invalid Subdomain" }
	{ InitValue "None" }
    }
    { Item
	{ AppType TMinimumValue }
	{ HelpText "Specify the minimum value in the valid subdomain for this type. Useful for integer and real DataType Classes only.  The input to this field is interpreted by the StP editors as a string, and converted into an appropriate real number or integer by StP/T.  Hence, if invalid values are entered, they will be flagged while compiling the StP/T input generated by either OMT or SE." }
	{ Bounds { Min 0 } { Max 1 } }
	{ PrintName "Minimum Value" }
	//{ InitValue "0" }
    }
    { Item
	{ AppType TMaximumValue }
	{ HelpText "Specify the maximum value in the valid subdomain for this type. Useful for integer and real DataType Classes only.  The input to this field is interpreted by the StP editors as a string, and converted into an appropriate real number or integer by StP/T.  Hence, if invalid values are entered, they will be flagged while compiling the StP/T input generated by either OMT or SE." }
	{ Bounds { Min 0 } { Max 1 } }
	{ PrintName "Maximum Value" }
	//{ InitValue "32000" }
    }
    { Item
	{ AppType TResolution }
	{ HelpText "Specify the step value in the valid subdomain for this type. Useful for integer and real DataType Classes only.  The input to this field is interpreted by the StP editors as a string, and converted into an appropriate real number or integer by StP/T.  Hence, if invalid values are entered, they will be flagged while compiling the StP/T input generated by either OMT or SE." }
	{ Bounds { Min 0 } { Max 1 } }
	{ PrintName "Resolution" }
    }
    { Item
	{ AppType TFormat }
	{ HelpText "Specify the format of the type.  This information can be captured in formatted test cases, so is available as a help for test case exection tools in interepreting the data from StP/T" }
	{ Bounds { Min 0 } { Max 1 } }
	{ PrintName "Format" }
    }
}

Note 802035
{
    { AppType DataStructureComment }
    { Bounds { Min 0 } { Max 1 } }
    { PrintName "Data Structure Comment" }
    { HelpText "The Data Structure Comment note lets you specify a comment to be generated as a comment for the data structure." }
}


// 2176A
Note 802031
{
    { AppType DeclarationCode }
    { Bounds { Min 0 } { Max 1 } }
    { PrintName "DCL Code" }
}

//  Add any user customizations to the file included below:
IncludeIfExists "user/ct/annotation/user_data_definition.note"

