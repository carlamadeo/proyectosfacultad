//
// 	sccsid[] = %W% %Y% %D%
// 	StP/Core
// 	Confidential property of Interactive Development Environments, Inc.
// 	Copyright (c) 1992-1995
// 	All rights reserved
//

#include "qrl/include/files.inc"

script_help = "This template looks for all diagrams and tables that contain syntax errors";

int main()
{
    if (file_syntax_history_query("", "sort by type", True) == 0)
    {
	message("No files have been saved with syntax errors.");
	print_line("No files have been saved with syntax errors.");
    }

    return 0;
}


int
file_syntax_history_query(string file_restrictor, string sort_clause, boolean ignore_annot_files)
{
    string query;
    file   file;
    int    errors = 0;
    file_hist   fhm, fhs;
    int         tmd, tsy;

    query = "file[" + file_restrictor + "]" + sort_clause;

    // Don't report files that can't be generated into the repository
    for_each_in_select(query, file)
    {
        if (file.type == "ObjectAnnotation")
            continue;

        if (file_is_rep_source(file.type))
        {
            if (file.lsync_id == 0)
            {
                file_syntax_error(file, "was saved with syntax errors.");
                errors = errors + 1;
                continue;
            }
            if (file.lmdfy_id > 0)
            {
                fhm = file_hist_get(file.lmdfy_id);

                if (fhm == NULL)
                    continue;

                // this doesn't work under NT, so I'm using file_hist_raw_time
                // instead
                //tmd = string_to_time(fhm.time, NULL);
                tmd = file_hist_raw_time(fhm);
                fhs = file_hist_get(file.lsync_id);

                if (fhs == NULL)
                {
                    file_syntax_error(file, "was saved with syntax errors.");
                    errors = errors + 1;
                    continue;
                }
                //tsy = string_to_time(fhs.time, NULL);
                tsy = file_hist_raw_time(fhs);

                if (tsy < tmd)
                {
                    file_syntax_error(file, "was saved with syntax errors.");
                    errors = errors + 1;
                }
            }
        }
    }
    return(errors);
}

void
file_syntax_error(file file, string msg)
{
    message(app_type_print_string(file) + " '" + file.name + "' " + msg);
    print_line(app_type_print_string(file) + " '" + file.name + "' " + msg);
}
